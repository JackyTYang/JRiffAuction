{
  "contractName": "NFTokenMetadata",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Optional metadata implementation for ERC-721 non-fungible token standard.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Set or reaffirm the approved address for an NFT. This function can be changed to payable.\",\"params\":{\"_approved\":\"Address to be approved for the given NFT ID.\",\"_tokenId\":\"ID of the token to be approved.\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"_owner\":\"Address for whom to query the balance.\"},\"returns\":{\"_0\":\"Balance of _owner.\"}},\"constructor\":{\"details\":\"Contract constructor.\"},\"getApproved(uint256)\":{\"details\":\"Get the approved address for a single NFT.\",\"params\":{\"_tokenId\":\"ID of the NFT to query the approval of.\"},\"returns\":{\"_0\":\"Address that _tokenId is approved for.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Checks if `_operator` is an approved operator for `_owner`.\",\"params\":{\"_operator\":\"The address that acts on behalf of the owner.\",\"_owner\":\"The address that owns the NFTs.\"},\"returns\":{\"_0\":\"True if approved for all, false otherwise.\"}},\"name()\":{\"details\":\"Returns a descriptive name for a collection of NFTokens.\",\"returns\":{\"_name\":\"Representing name.\"}},\"ownerOf(uint256)\":{\"details\":\"Returns the address of the owner of the NFT. NFTs assigned to the zero address are considered invalid, and queries about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT.\"},\"returns\":{\"_owner\":\"Address of _tokenId owner.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.\",\"params\":{\"_data\":\"Additional data with no specified format, sent in call to `_to`.\",\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Enables or disables approval for a third party (\\\"operator\\\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.\",\"params\":{\"_approved\":\"True if the operators is approved, false to revoke approval.\",\"_operator\":\"Address to add to the set of authorized operators.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Function to check which interfaces are suported by this contract.\",\"params\":{\"_interfaceID\":\"Id of the interface.\"},\"returns\":{\"_0\":\"True if _interfaceID is supported, false otherwise.\"}},\"symbol()\":{\"details\":\"Returns an abbreviated name for NFTokens.\",\"returns\":{\"_symbol\":\"Representing symbol.\"}},\"tokenURI(uint256)\":{\"details\":\"A distinct URI (RFC 3986) for a given NFT.\",\"params\":{\"_tokenId\":\"Id for which we want uri.\"},\"returns\":{\"_0\":\"URI of _tokenId.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}}},\"stateVariables\":{\"idToUri\":{\"details\":\"Mapping from NFT ID to metadata uri.\"},\"nftName\":{\"details\":\"A descriptive name for a collection of NFTs.\"},\"nftSymbol\":{\"details\":\"An abbreviated name for NFTokens.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\"},\"constructor\":{\"notice\":\"When implementing this contract don't forget to set nftName and nftSymbol.\"},\"getApproved(uint256)\":{\"notice\":\"Throws if `_tokenId` is not a valid NFT.\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"This works identically to the other function with an extra data parameter, except this function just sets data to \\\"\\\".\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\\\"onERC721Received(address,uint256,bytes)\\\"))`.\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"This works even if sender doesn't own any tokens at the time.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they may be permanently lost.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/tokens/nf-token-metadata.sol\":\"NFTokenMetadata\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"project:/contracts/tokens/erc721-metadata.sol\":{\"keccak256\":\"0x42f83c7b536d7356e6c0ad76906aec2d4788174c3bc2ff6932689d79f84593e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63f4cc120bb4a795b76c75890472067f934ee266f99df4a605782e82b0384f46\",\"dweb:/ipfs/QmRDFCRSsj13kGD4M4Sfpag5QLH6n7jwSpeDTRk6JiRpnk\"]},\"project:/contracts/tokens/erc721-token-receiver.sol\":{\"keccak256\":\"0x841d6c556e9813b2276ed73c295f984ef9229b2f082ad458de196aa5aeebd483\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44869eb9eaa25fada3db53623a3807e233ff2856c1f3c03dd248b6b3a9180672\",\"dweb:/ipfs/QmV7apf2bACmGtmRgCXfQjVmaKYpAP4MmaJq16swCPmc4V\"]},\"project:/contracts/tokens/erc721.sol\":{\"keccak256\":\"0x96c3cef85c3ff14676494b4ee580330449a3f1dc625d63132da14825d64c9eff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://286ead0a0462452fbd9008a01a7aebe02b1b84c10c7e0be9bb8aeff0d4bb04f6\",\"dweb:/ipfs/QmcmJiRmCkViPkkVGgj9WANhrZzWC6X9QtzvZrSiqT8kCg\"]},\"project:/contracts/tokens/nf-token-metadata.sol\":{\"keccak256\":\"0xa91f58d3ceb8e2685bae3c367257c8d5aa880b6fb534817a44b735718b6711d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca75804486d71273bc17f60b069f3515cdde425ffaa87cb565546328f31742a0\",\"dweb:/ipfs/QmcgDQ4uvLCNw5eRw5FT4h7jUNtHJbPZnfn6jh36Cpm5x9\"]},\"project:/contracts/tokens/nf-token.sol\":{\"keccak256\":\"0xd18f3691d0a52df5c22a1557230ca8b319a4c41801fbd2eb4fe2c8bcdad8ad7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cb8be1fc63ae8bac4d4a6a9d6a706f4a3fe869406a0d0f555b4a5b7243fb580\",\"dweb:/ipfs/QmQcBdEULE19kPQciM6X6NHeaxk79FXFWPdd7F2ax6HvQP\"]},\"project:/contracts/utils/address-utils.sol\":{\"keccak256\":\"0x29cdeb28f1e34c1239b2f82d689e0ffd6b8a95daf603d5433c893074f3ccb7f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c95907b58747d92a0a53135d8de085a2e44335af62ec00c67ab4739742a595\",\"dweb:/ipfs/QmUGiu6HXg3rL3RfDKjH95jksjEmTcagNEc5id7DDBWpnk\"]},\"project:/contracts/utils/erc165.sol\":{\"keccak256\":\"0xd8c18f29926bf75aace3103a010f542399b6975d3f0a76e8b3f07f4c2fd55b0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://015f502839b075ace581add5da64411cacb6ccf1db0528c4e8efce29fb095f3b\",\"dweb:/ipfs/QmXaT1YBbnVFbGpG4Zrv6WuS7QDUyJGb6Gr7xEbGFEpWYE\"]},\"project:/contracts/utils/supports-interface.sol\":{\"keccak256\":\"0x1efe9984a265a0e4a2f2d795770e97419c2f265805a83b9a2b5502e5f8c36616\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9cc02a91a6d7b593feba6ee666f237f284710edbb4f32d1c8b701b83c69d596\",\"dweb:/ipfs/QmUkz7r8zGU8trjf7bk8cLo9sKEDMyVR6KQTdNoRU7317o\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600060208190527f67be87c3ff9960ca1e9cfac5cab2ff4747269cf9ed20c9b7306235ac35a491c5805460ff1990811660019081179092557ff7815fccbf112960a73756e185887fedcb9fc64ca0a16cc5923b7960ed7808008054821683179055635b5e139f60e01b9092527f9562381dfbc2d8b8b66e765249f330164b73e329e5f01670660643571d1974df8054909216179055611262806100b56000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101f5578063b88d4fde14610208578063c87b56dd1461021b578063e985e9c51461022e57600080fd5b80636352211e146101b957806370a08231146101cc57806395d89b41146101ed57600080fd5b8063095ea7b3116100bd578063095ea7b31461017e57806323b872dd1461019357806342842e0e146101a657600080fd5b806301ffc9a7146100e457806306fdde031461013e578063081812fc14610153575b600080fd5b6101296100f2366004611092565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081526020819052604090205460ff1690565b60405190151581526020015b60405180910390f35b61014661026a565b604051610135919061116e565b6101666101613660046110cc565b6102fc565b6040516001600160a01b039091168152602001610135565b61019161018c366004611068565b61037e565b005b6101916101a1366004610f55565b61055b565b6101916101b4366004610f55565b610716565b6101666101c73660046110cc565b610736565b6101df6101da366004610f00565b61078e565b604051908152602001610135565b6101466107f2565b61019161020336600461102c565b610801565b610191610216366004610f91565b61086d565b6101466102293660046110cc565b6108b6565b61012961023c366004610f22565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b606060058054610279906111b0565b80601f01602080910402602001604051908101604052809291908181526020018280546102a5906111b0565b80156102f25780601f106102c7576101008083540402835291602001916102f2565b820191906000526020600020905b8154815290600101906020018083116102d557829003601f168201915b5050505050905090565b6000818152600160209081526040808320548151808301909252600682526518181998181960d11b9282019290925283916001600160a01b031661035c5760405162461bcd60e51b8152600401610353919061116e565b60405180910390fd5b506000838152600260205260409020546001600160a01b031691505b50919050565b60008181526001602052604090205481906001600160a01b0316338114806103c957506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b6040518060400160405280600681526020017f30303330303300000000000000000000000000000000000000000000000000008152509061041d5760405162461bcd60e51b8152600401610353919061116e565b50600083815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528491906001600160a01b03166104775760405162461bcd60e51b8152600401610353919061116e565b50600084815260016020908152604091829020548251808401909352600683527f3030333030380000000000000000000000000000000000000000000000000000918301919091526001600160a01b03908116919087168214156104ee5760405162461bcd60e51b8152600401610353919061116e565b50600085815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038a811691821790925591518893918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050505050565b60008181526001602052604090205481906001600160a01b03163381148061059957506000828152600260205260409020546001600160a01b031633145b806105c757506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b604051806040016040528060068152602001650c0c0ccc0c0d60d21b815250906106045760405162461bcd60e51b8152600401610353919061116e565b50600083815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528491906001600160a01b031661065e5760405162461bcd60e51b8152600401610353919061116e565b50600084815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b039081169190881682146106bd5760405162461bcd60e51b8152600401610353919061116e565b5060408051808201909152600681526530303330303160d01b60208201526001600160a01b0387166107025760405162461bcd60e51b8152600401610353919061116e565b5061070d86866109b1565b50505050505050565b61073183838360405180602001604052806000815250610a49565b505050565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091526001600160a01b031690816103785760405162461bcd60e51b8152600401610353919061116e565b60408051808201909152600681526530303330303160d01b60208201526000906001600160a01b0383166107d55760405162461bcd60e51b8152600401610353919061116e565b50506001600160a01b031660009081526003602052604090205490565b606060068054610279906111b0565b3360008181526004602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6108af85858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610a4992505050565b5050505050565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b9183019190915260609183916001600160a01b03166109115760405162461bcd60e51b8152600401610353919061116e565b506000838152600760205260409020805461092b906111b0565b80601f0160208091040260200160405190810160405280929190818152602001828054610957906111b0565b80156109a45780601f10610979576101008083540402835291602001916109a4565b820191906000526020600020905b81548152906001019060200180831161098757829003601f168201915b5050505050915050919050565b6000818152600160209081526040808320546002909252909120805473ffffffffffffffffffffffffffffffffffffffff191690556001600160a01b03166109f98183610d26565b610a038383610ddc565b81836001600160a01b0316826001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60008281526001602052604090205482906001600160a01b031633811480610a8757506000828152600260205260409020546001600160a01b031633145b80610ab557506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b604051806040016040528060068152602001650c0c0ccc0c0d60d21b81525090610af25760405162461bcd60e51b8152600401610353919061116e565b50600084815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528591906001600160a01b0316610b4c5760405162461bcd60e51b8152600401610353919061116e565b50600085815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b03908116919089168214610bab5760405162461bcd60e51b8152600401610353919061116e565b5060408051808201909152600681526530303330303160d01b60208201526001600160a01b038816610bf05760405162461bcd60e51b8152600401610353919061116e565b50610bfb87876109b1565b610c0d876001600160a01b0316610ea8565b15610d1c57604051630a85bd0160e11b81526000906001600160a01b0389169063150b7a0290610c479033908d908c908c90600401611132565b602060405180830381600087803b158015610c6157600080fd5b505af1158015610c75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9991906110af565b60408051808201909152600681527f303033303035000000000000000000000000000000000000000000000000000060208201529091507fffffffff000000000000000000000000000000000000000000000000000000008216630a85bd0160e11b14610d195760405162461bcd60e51b8152600401610353919061116e565b50505b5050505050505050565b600081815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b03848116911614610d815760405162461bcd60e51b8152600401610353919061116e565b506001600160a01b0382166000908152600360205260408120805460019290610dab908490611199565b90915550506000908152600160205260409020805473ffffffffffffffffffffffffffffffffffffffff1916905550565b600081815260016020908152604091829020548251808401909352600683527f3030333030360000000000000000000000000000000000000000000000000000918301919091526001600160a01b031615610e4a5760405162461bcd60e51b8152600401610353919061116e565b506000818152600160208181526040808420805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038816908117909155845260039091528220805491929091610e9f908490611181565b90915550505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590610edc5750808214155b949350505050565b80356001600160a01b0381168114610efb57600080fd5b919050565b600060208284031215610f1257600080fd5b610f1b82610ee4565b9392505050565b60008060408385031215610f3557600080fd5b610f3e83610ee4565b9150610f4c60208401610ee4565b90509250929050565b600080600060608486031215610f6a57600080fd5b610f7384610ee4565b9250610f8160208501610ee4565b9150604084013590509250925092565b600080600080600060808688031215610fa957600080fd5b610fb286610ee4565b9450610fc060208701610ee4565b935060408601359250606086013567ffffffffffffffff80821115610fe457600080fd5b818801915088601f830112610ff857600080fd5b81358181111561100757600080fd5b89602082850101111561101957600080fd5b9699959850939650602001949392505050565b6000806040838503121561103f57600080fd5b61104883610ee4565b91506020830135801515811461105d57600080fd5b809150509250929050565b6000806040838503121561107b57600080fd5b61108483610ee4565b946020939093013593505050565b6000602082840312156110a457600080fd5b8135610f1b816111fb565b6000602082840312156110c157600080fd5b8151610f1b816111fb565b6000602082840312156110de57600080fd5b5035919050565b6000815180845260005b8181101561110b576020818501810151868301820152016110ef565b8181111561111d576000602083870101525b50601f01601f19169290920160200192915050565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261116460808301846110e5565b9695505050505050565b602081526000610f1b60208301846110e5565b60008219821115611194576111946111e5565b500190565b6000828210156111ab576111ab6111e5565b500390565b600181811c908216806111c457607f821691505b6020821081141561037857634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b7fffffffff000000000000000000000000000000000000000000000000000000008116811461122957600080fd5b5056fea2646970667358221220b8103e5812a6cf3e5f87e541311edaa68bbc0675322da2f749f937eacb98112f64736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100df5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101f5578063b88d4fde14610208578063c87b56dd1461021b578063e985e9c51461022e57600080fd5b80636352211e146101b957806370a08231146101cc57806395d89b41146101ed57600080fd5b8063095ea7b3116100bd578063095ea7b31461017e57806323b872dd1461019357806342842e0e146101a657600080fd5b806301ffc9a7146100e457806306fdde031461013e578063081812fc14610153575b600080fd5b6101296100f2366004611092565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081526020819052604090205460ff1690565b60405190151581526020015b60405180910390f35b61014661026a565b604051610135919061116e565b6101666101613660046110cc565b6102fc565b6040516001600160a01b039091168152602001610135565b61019161018c366004611068565b61037e565b005b6101916101a1366004610f55565b61055b565b6101916101b4366004610f55565b610716565b6101666101c73660046110cc565b610736565b6101df6101da366004610f00565b61078e565b604051908152602001610135565b6101466107f2565b61019161020336600461102c565b610801565b610191610216366004610f91565b61086d565b6101466102293660046110cc565b6108b6565b61012961023c366004610f22565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b606060058054610279906111b0565b80601f01602080910402602001604051908101604052809291908181526020018280546102a5906111b0565b80156102f25780601f106102c7576101008083540402835291602001916102f2565b820191906000526020600020905b8154815290600101906020018083116102d557829003601f168201915b5050505050905090565b6000818152600160209081526040808320548151808301909252600682526518181998181960d11b9282019290925283916001600160a01b031661035c5760405162461bcd60e51b8152600401610353919061116e565b60405180910390fd5b506000838152600260205260409020546001600160a01b031691505b50919050565b60008181526001602052604090205481906001600160a01b0316338114806103c957506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b6040518060400160405280600681526020017f30303330303300000000000000000000000000000000000000000000000000008152509061041d5760405162461bcd60e51b8152600401610353919061116e565b50600083815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528491906001600160a01b03166104775760405162461bcd60e51b8152600401610353919061116e565b50600084815260016020908152604091829020548251808401909352600683527f3030333030380000000000000000000000000000000000000000000000000000918301919091526001600160a01b03908116919087168214156104ee5760405162461bcd60e51b8152600401610353919061116e565b50600085815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038a811691821790925591518893918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050505050565b60008181526001602052604090205481906001600160a01b03163381148061059957506000828152600260205260409020546001600160a01b031633145b806105c757506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b604051806040016040528060068152602001650c0c0ccc0c0d60d21b815250906106045760405162461bcd60e51b8152600401610353919061116e565b50600083815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528491906001600160a01b031661065e5760405162461bcd60e51b8152600401610353919061116e565b50600084815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b039081169190881682146106bd5760405162461bcd60e51b8152600401610353919061116e565b5060408051808201909152600681526530303330303160d01b60208201526001600160a01b0387166107025760405162461bcd60e51b8152600401610353919061116e565b5061070d86866109b1565b50505050505050565b61073183838360405180602001604052806000815250610a49565b505050565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091526001600160a01b031690816103785760405162461bcd60e51b8152600401610353919061116e565b60408051808201909152600681526530303330303160d01b60208201526000906001600160a01b0383166107d55760405162461bcd60e51b8152600401610353919061116e565b50506001600160a01b031660009081526003602052604090205490565b606060068054610279906111b0565b3360008181526004602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6108af85858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610a4992505050565b5050505050565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b9183019190915260609183916001600160a01b03166109115760405162461bcd60e51b8152600401610353919061116e565b506000838152600760205260409020805461092b906111b0565b80601f0160208091040260200160405190810160405280929190818152602001828054610957906111b0565b80156109a45780601f10610979576101008083540402835291602001916109a4565b820191906000526020600020905b81548152906001019060200180831161098757829003601f168201915b5050505050915050919050565b6000818152600160209081526040808320546002909252909120805473ffffffffffffffffffffffffffffffffffffffff191690556001600160a01b03166109f98183610d26565b610a038383610ddc565b81836001600160a01b0316826001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60008281526001602052604090205482906001600160a01b031633811480610a8757506000828152600260205260409020546001600160a01b031633145b80610ab557506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b604051806040016040528060068152602001650c0c0ccc0c0d60d21b81525090610af25760405162461bcd60e51b8152600401610353919061116e565b50600084815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528591906001600160a01b0316610b4c5760405162461bcd60e51b8152600401610353919061116e565b50600085815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b03908116919089168214610bab5760405162461bcd60e51b8152600401610353919061116e565b5060408051808201909152600681526530303330303160d01b60208201526001600160a01b038816610bf05760405162461bcd60e51b8152600401610353919061116e565b50610bfb87876109b1565b610c0d876001600160a01b0316610ea8565b15610d1c57604051630a85bd0160e11b81526000906001600160a01b0389169063150b7a0290610c479033908d908c908c90600401611132565b602060405180830381600087803b158015610c6157600080fd5b505af1158015610c75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9991906110af565b60408051808201909152600681527f303033303035000000000000000000000000000000000000000000000000000060208201529091507fffffffff000000000000000000000000000000000000000000000000000000008216630a85bd0160e11b14610d195760405162461bcd60e51b8152600401610353919061116e565b50505b5050505050505050565b600081815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b03848116911614610d815760405162461bcd60e51b8152600401610353919061116e565b506001600160a01b0382166000908152600360205260408120805460019290610dab908490611199565b90915550506000908152600160205260409020805473ffffffffffffffffffffffffffffffffffffffff1916905550565b600081815260016020908152604091829020548251808401909352600683527f3030333030360000000000000000000000000000000000000000000000000000918301919091526001600160a01b031615610e4a5760405162461bcd60e51b8152600401610353919061116e565b506000818152600160208181526040808420805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038816908117909155845260039091528220805491929091610e9f908490611181565b90915550505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590610edc5750808214155b949350505050565b80356001600160a01b0381168114610efb57600080fd5b919050565b600060208284031215610f1257600080fd5b610f1b82610ee4565b9392505050565b60008060408385031215610f3557600080fd5b610f3e83610ee4565b9150610f4c60208401610ee4565b90509250929050565b600080600060608486031215610f6a57600080fd5b610f7384610ee4565b9250610f8160208501610ee4565b9150604084013590509250925092565b600080600080600060808688031215610fa957600080fd5b610fb286610ee4565b9450610fc060208701610ee4565b935060408601359250606086013567ffffffffffffffff80821115610fe457600080fd5b818801915088601f830112610ff857600080fd5b81358181111561100757600080fd5b89602082850101111561101957600080fd5b9699959850939650602001949392505050565b6000806040838503121561103f57600080fd5b61104883610ee4565b91506020830135801515811461105d57600080fd5b809150509250929050565b6000806040838503121561107b57600080fd5b61108483610ee4565b946020939093013593505050565b6000602082840312156110a457600080fd5b8135610f1b816111fb565b6000602082840312156110c157600080fd5b8151610f1b816111fb565b6000602082840312156110de57600080fd5b5035919050565b6000815180845260005b8181101561110b576020818501810151868301820152016110ef565b8181111561111d576000602083870101525b50601f01601f19169290920160200192915050565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261116460808301846110e5565b9695505050505050565b602081526000610f1b60208301846110e5565b60008219821115611194576111946111e5565b500190565b6000828210156111ab576111ab6111e5565b500390565b600181811c908216806111c457607f821691505b6020821081141561037857634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b7fffffffff000000000000000000000000000000000000000000000000000000008116811461122957600080fd5b5056fea2646970667358221220b8103e5812a6cf3e5f87e541311edaa68bbc0675322da2f749f937eacb98112f64736f6c63430008060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6011:32",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:32",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:147:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:32"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:32"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "188:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "197:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "200:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "190:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "190:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "190:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:32"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "142:42:32",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:54:32"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:65:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:73:32"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:32"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:32",
                "type": ""
              }
            ],
            "src": "14:196:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "285:116:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "331:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "340:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "343:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "333:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "333:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "333:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "306:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "315:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "302:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "302:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "327:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "298:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "298:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "295:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "356:39:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "385:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "366:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "366:29:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "356:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "251:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "262:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "274:6:32",
                "type": ""
              }
            ],
            "src": "215:186:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "493:173:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "539:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "548:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "551:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "541:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "541:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "541:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "514:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "523:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "510:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "510:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "535:2:32",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "506:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "506:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "503:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "564:39:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "593:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "574:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "574:29:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "564:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "612:48:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "645:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "656:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "641:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "641:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "622:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "622:38:32"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "612:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "451:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "462:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "474:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "482:6:32",
                "type": ""
              }
            ],
            "src": "406:260:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "775:224:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "821:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "830:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "833:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "823:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "823:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "823:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "796:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "805:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "792:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "792:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "817:2:32",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "788:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "788:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "785:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "846:39:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "875:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "856:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "856:29:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "846:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "894:48:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "927:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "938:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "923:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "923:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "904:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "904:38:32"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "894:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "951:42:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "978:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "989:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "974:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "974:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "961:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "961:32:32"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "951:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "725:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "736:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "748:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "756:6:32",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "764:6:32",
                "type": ""
              }
            ],
            "src": "671:328:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1144:668:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1191:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1200:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1203:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1193:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1193:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1193:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1165:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1174:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1161:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1161:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1186:3:32",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1157:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1157:33:32"
                  },
                  "nodeType": "YulIf",
                  "src": "1154:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1216:39:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1245:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1226:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1226:29:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1216:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1264:48:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1297:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1308:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1293:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1293:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1274:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1274:38:32"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1264:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1321:42:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1348:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1359:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1344:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1344:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1331:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1331:32:32"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1321:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1372:46:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1403:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1414:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1399:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1399:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1386:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1386:32:32"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1376:6:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1427:28:32",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1437:18:32",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1431:2:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1482:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1491:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1494:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1484:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1484:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1484:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1470:6:32"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1478:2:32"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1467:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1467:14:32"
                  },
                  "nodeType": "YulIf",
                  "src": "1464:2:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1507:32:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1521:9:32"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1532:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1517:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1517:22:32"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1511:2:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1587:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1596:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1599:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1589:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1589:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1589:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1566:2:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1570:4:32",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1562:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1562:13:32"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1577:7:32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1558:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1558:27:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1551:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1551:35:32"
                  },
                  "nodeType": "YulIf",
                  "src": "1548:2:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1612:30:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1639:2:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1626:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1626:16:32"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1616:6:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1669:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1678:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1681:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1671:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1671:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1671:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1657:6:32"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1665:2:32"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1654:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1654:14:32"
                  },
                  "nodeType": "YulIf",
                  "src": "1651:2:32"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1735:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1744:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1747:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1737:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1737:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1737:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1708:2:32"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1712:6:32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1704:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1704:15:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1721:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1700:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1700:24:32"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1726:7:32"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1697:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1697:37:32"
                  },
                  "nodeType": "YulIf",
                  "src": "1694:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1760:21:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1774:2:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1778:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1770:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1770:11:32"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1760:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1790:16:32",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "1800:6:32"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1790:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1078:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1089:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1101:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1109:6:32",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1117:6:32",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1125:6:32",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1133:6:32",
                "type": ""
              }
            ],
            "src": "1004:808:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1901:263:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1947:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1956:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1959:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1949:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1949:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1949:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1922:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1931:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1918:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1918:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1943:2:32",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1914:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1914:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "1911:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1972:39:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2001:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1982:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1982:29:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1972:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2020:45:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2050:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2061:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2046:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2046:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2033:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2033:32:32"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2024:5:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2118:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2127:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2130:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2120:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2120:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2120:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2087:5:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2108:5:32"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2101:6:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2101:13:32"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2094:6:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2094:21:32"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2084:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2084:32:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2077:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2077:40:32"
                  },
                  "nodeType": "YulIf",
                  "src": "2074:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2143:15:32",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2153:5:32"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2143:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1859:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1870:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1882:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1890:6:32",
                "type": ""
              }
            ],
            "src": "1817:347:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2256:167:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2302:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2311:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2314:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2304:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2304:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2304:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2277:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2286:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2273:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2273:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2298:2:32",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2269:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2269:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "2266:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2327:39:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2356:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2337:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2337:29:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2327:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2375:42:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2402:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2413:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2398:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2398:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2385:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2385:32:32"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2375:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2214:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2225:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2237:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2245:6:32",
                "type": ""
              }
            ],
            "src": "2169:254:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2497:176:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2543:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2552:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2555:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2545:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2545:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2545:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2518:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2527:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2514:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2514:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2539:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2510:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2510:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "2507:2:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2568:36:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2594:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2581:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2581:23:32"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2572:5:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2637:5:32"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "2613:23:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2613:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2613:30:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2652:15:32",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2662:5:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2652:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2463:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2474:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2486:6:32",
                "type": ""
              }
            ],
            "src": "2428:245:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2758:169:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2804:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2813:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2816:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2806:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2806:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2806:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2779:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2788:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2775:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2775:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2800:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2771:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2771:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "2768:2:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2829:29:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2848:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2842:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2842:16:32"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2833:5:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2891:5:32"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "2867:23:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2867:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2867:30:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2906:15:32",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2916:5:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2906:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2724:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2735:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2747:6:32",
                "type": ""
              }
            ],
            "src": "2678:249:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3002:110:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3048:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3057:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3060:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3050:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3050:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3050:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3023:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3032:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3019:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3019:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3044:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3015:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3015:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "3012:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3073:33:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3096:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3083:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3083:23:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3073:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2968:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2979:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2991:6:32",
                "type": ""
              }
            ],
            "src": "2932:180:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3166:422:32",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3176:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3196:5:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3190:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3190:12:32"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3180:6:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3218:3:32"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3223:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3211:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3211:19:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3211:19:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3239:10:32",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3248:1:32",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "3243:1:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3310:110:32",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3324:14:32",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3334:4:32",
                          "type": "",
                          "value": "0x20"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "3328:2:32",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "3366:3:32"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "3371:1:32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3362:3:32"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3362:11:32"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3375:2:32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3358:3:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3358:20:32"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "3394:5:32"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "3401:1:32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3390:3:32"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3390:13:32"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "3405:2:32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3386:3:32"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3386:22:32"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3380:5:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3380:29:32"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3351:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3351:59:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3351:59:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3269:1:32"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3272:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3266:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3266:13:32"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3280:21:32",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3282:17:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3291:1:32"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3294:4:32",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3287:3:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3287:12:32"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3282:1:32"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3262:3:32",
                    "statements": []
                  },
                  "src": "3258:162:32"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3454:62:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "3483:3:32"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "3488:6:32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3479:3:32"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3479:16:32"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3497:4:32",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3475:3:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3475:27:32"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3504:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3468:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3468:38:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3468:38:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3435:1:32"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3438:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3432:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3432:13:32"
                  },
                  "nodeType": "YulIf",
                  "src": "3429:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3525:57:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3540:3:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3553:6:32"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3561:2:32",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3549:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3549:15:32"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3570:2:32",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3566:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3566:7:32"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3545:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3545:29:32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3536:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3536:39:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3577:4:32",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3532:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3532:50:32"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3525:3:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3143:5:32",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3150:3:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3158:3:32",
                "type": ""
              }
            ],
            "src": "3117:471:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3694:125:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3704:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3716:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3727:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3712:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3712:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3704:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3746:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3761:6:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3769:42:32",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3757:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3757:55:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3739:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3739:74:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3739:74:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3663:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3674:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3685:4:32",
                "type": ""
              }
            ],
            "src": "3593:226:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4027:308:32",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4037:52:32",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4047:42:32",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4041:2:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4105:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4120:6:32"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4128:2:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4116:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4116:15:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4098:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4098:34:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4098:34:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4152:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4163:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4148:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4148:18:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4172:6:32"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4180:2:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4168:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4168:15:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4141:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4141:43:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4141:43:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4204:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4215:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4200:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4200:18:32"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4220:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4193:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4193:34:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4193:34:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4247:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4258:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4243:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4243:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4263:3:32",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4236:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4236:31:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4236:31:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4276:53:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "4301:6:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4313:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4324:3:32",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4309:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4309:19:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "4284:16:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4284:45:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4276:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3972:9:32",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3983:6:32",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3991:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3999:6:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4007:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4018:4:32",
                "type": ""
              }
            ],
            "src": "3824:511:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4435:92:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4445:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4457:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4468:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4453:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4453:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4445:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4487:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4512:6:32"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4505:6:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4505:14:32"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4498:6:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4498:22:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4480:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4480:41:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4480:41:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4404:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4415:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4426:4:32",
                "type": ""
              }
            ],
            "src": "4340:187:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4653:98:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4670:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4681:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4663:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4663:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4663:21:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4693:52:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4718:6:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4730:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4741:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4726:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4726:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "4701:16:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4701:44:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4693:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4622:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4633:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4644:4:32",
                "type": ""
              }
            ],
            "src": "4532:219:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4857:76:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4867:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4879:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4890:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4875:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4875:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4867:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4909:9:32"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4920:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4902:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4902:25:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4902:25:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4826:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4837:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4848:4:32",
                "type": ""
              }
            ],
            "src": "4756:177:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4986:80:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5013:22:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5015:16:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5015:18:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5015:18:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5002:1:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "5009:1:32"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "5005:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5005:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4999:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4999:13:32"
                  },
                  "nodeType": "YulIf",
                  "src": "4996:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5044:16:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5055:1:32"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5058:1:32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5051:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5051:9:32"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "5044:3:32"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4969:1:32",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4972:1:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "4978:3:32",
                "type": ""
              }
            ],
            "src": "4938:128:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5120:76:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5142:22:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5144:16:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5144:18:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5144:18:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5136:1:32"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5139:1:32"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5133:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5133:8:32"
                  },
                  "nodeType": "YulIf",
                  "src": "5130:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5173:17:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5185:1:32"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5188:1:32"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "5181:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5181:9:32"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "5173:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5102:1:32",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5105:1:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "5111:4:32",
                "type": ""
              }
            ],
            "src": "5071:125:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5256:382:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5266:22:32",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5280:1:32",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "5283:4:32"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "5276:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5276:12:32"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "5266:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5297:38:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "5327:4:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5333:1:32",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5323:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5323:12:32"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "5301:18:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5374:31:32",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5376:27:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "5390:6:32"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5398:4:32",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "5386:3:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5386:17:32"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5376:6:32"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "5354:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5347:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5347:26:32"
                  },
                  "nodeType": "YulIf",
                  "src": "5344:2:32"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5464:168:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5485:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5488:77:32",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5478:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5478:88:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5478:88:32"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5586:1:32",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5589:4:32",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5579:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5579:15:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5579:15:32"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5614:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5617:4:32",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5607:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5607:15:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5607:15:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "5420:18:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5443:6:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5451:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5440:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5440:14:32"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "5417:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5417:38:32"
                  },
                  "nodeType": "YulIf",
                  "src": "5414:2:32"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "5236:4:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5245:6:32",
                "type": ""
              }
            ],
            "src": "5201:437:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5675:152:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5692:1:32",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5695:77:32",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5685:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5685:88:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5685:88:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5789:1:32",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5792:4:32",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5782:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5782:15:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5782:15:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5813:1:32",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5816:4:32",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5806:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5806:15:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5806:15:32"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "5643:184:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5876:133:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5987:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5996:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5999:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5989:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5989:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5989:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5899:5:32"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5910:5:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5917:66:32",
                                "type": "",
                                "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5906:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5906:78:32"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5896:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5896:89:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5889:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5889:97:32"
                  },
                  "nodeType": "YulIf",
                  "src": "5886:2:32"
                }
              ]
            },
            "name": "validator_revert_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5865:5:32",
                "type": ""
              }
            ],
            "src": "5832:177:32"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value3 := add(_2, 32)\n        value4 := length\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_bytes(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n}",
      "id": 32,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "214:2531:27:-:0;;;720:86;;;;;;;;;-1:-1:-1;451:19:31;:31;;;;;:38;;-1:-1:-1;;451:38:31;;;485:4;451:38;;;;;;2883:31:28;:38;;;;;;;;-1:-1:-1;;;744:31:27;;;;:38;;;;;;;;214:2531;;;;;;",
  "deployedSourceMap": "214:2531:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;715:172:31;;;;;;:::i;:::-;848:33;;825:4;848:33;;;;;;;;;;;;;;715:172;;;;4505:14:32;;4498:22;4480:41;;4468:2;4453:18;715:172:31;;;;;;;;933:120:27;;;:::i;:::-;;;;;;;:::i;8188:183:28:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3757:55:32;;;3739:74;;3727:2;3712:18;8188:183:28;3694:125:32;5973:352:28;;;;;;:::i;:::-;;:::i;:::-;;5186:366;;;;;;:::i;:::-;;:::i;4431:179::-;;;;;;:::i;:::-;;:::i;7736:208::-;;;;;;:::i;:::-;;:::i;7262:204::-;;;;;;:::i;:::-;;:::i;:::-;;;4902:25:32;;;4890:2;4875:18;7262:204:28;4857:76:32;1169:128:27;;;:::i;6736:232:28:-;;;;;;:::i;:::-;;:::i;3811:209::-;;;;;;:::i;:::-;;:::i;1450:181:27:-;;;;;;:::i;:::-;;:::i;8640:192:28:-;;;;;;:::i;:::-;-1:-1:-1;;;;;8791:24:28;;;8768:4;8791:24;;;:16;:24;;;;;;;;:35;;;;;;;;;;;;;;;8640:192;933:120:27;1001:19;1040:7;1032:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;933:120;:::o;8188:183:28:-;8317:7;2743:19;;;:9;:19;;;;;;;;;2778:13;;;;;;;;;;;-1:-1:-1;;;2778:13:28;;;;;;;8293:8;;-1:-1:-1;;;;;2743:19:28;2735:57;;;;-1:-1:-1;;;2735:57:28;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;8343:22:28::1;::::0;;;:12:::1;:22;::::0;;;;;-1:-1:-1;;;;;8343:22:28::1;::::0;-1:-1:-1;2799:1:28::1;8188:183:::0;;;;:::o;5973:352::-;1927:18;1948:19;;;:9;:19;;;;;;6086:8;;-1:-1:-1;;;;;1948:19:28;2004:10;1990:24;;;:68;;-1:-1:-1;;;;;;2018:28:28;;;;;;:16;:28;;;;;;;;2047:10;2018:40;;;;;;;;;;1990:68;2067:21;;;;;;;;;;;;;;;;;1974:121;;;;;-1:-1:-1;;;1974:121:28;;;;;;;;:::i;:::-;-1:-1:-1;2774:1:28::1;2743:19:::0;;;:9:::1;:19;::::0;;;;;;;;;2778:13;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;2778:13:28;;::::1;::::0;;;;6114:8;;2778:13;-1:-1:-1;;;;;2743:19:28::1;2735:57;;;;-1:-1:-1::0;;;2735:57:28::1;;;;;;;;:::i;:::-;-1:-1:-1::0;6134:18:28::2;6155:19:::0;;;:9:::2;:19;::::0;;;;;;;;;6214:8;;;;::::2;::::0;;;::::2;::::0;;::::2;::::0;;::::2;::::0;;;;-1:-1:-1;;;;;6155:19:28;;::::2;::::0;6214:8;6189:23;::::2;::::0;::::2;;6181:42;;;;-1:-1:-1::0;;;6181:42:28::2;;;;;;;;:::i;:::-;-1:-1:-1::0;6232:22:28::2;::::0;;;:12:::2;:22;::::0;;;;;:34;;-1:-1:-1;;6232:34:28::2;-1:-1:-1::0;;;;;6232:34:28;;::::2;::::0;;::::2;::::0;;;6278:41;;6232:22;;6278:41;;::::2;::::0;::::2;::::0;::::2;6127:198;2102:1:::1;1920:189:::0;5973:352;;;:::o;5186:366::-;2307:18;2328:19;;;:9;:19;;;;;;5332:8;;-1:-1:-1;;;;;2328:19:28;2384:10;2370:24;;;:71;;-1:-1:-1;2405:22:28;;;;:12;:22;;;;;;-1:-1:-1;;;;;2405:22:28;2431:10;2405:36;2370:71;:122;;;-1:-1:-1;;;;;;2452:28:28;;;;;;:16;:28;;;;;;;;2481:10;2452:40;;;;;;;;;;2370:122;2501:30;;;;;;;;;;;;;-1:-1:-1;;;2501:30:28;;;2354:184;;;;;-1:-1:-1;;;2354:184:28;;;;;;;;:::i;:::-;-1:-1:-1;2774:1:28::1;2743:19:::0;;;:9:::1;:19;::::0;;;;;;;;;2778:13;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;2778:13:28;;::::1;::::0;;;;5360:8;;2778:13;-1:-1:-1;;;;;2743:19:28::1;2735:57;;;;-1:-1:-1::0;;;2735:57:28::1;;;;;;;;:::i;:::-;-1:-1:-1::0;5380:18:28::2;5401:19:::0;;;:9:::2;:19;::::0;;;;;;;;;5456:9;;;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;;;5456:9:28;;::::2;::::0;;;;-1:-1:-1;;;;;5401:19:28;;::::2;::::0;5456:9;5435:19;::::2;::::0;::::2;5427:39;;;;-1:-1:-1::0;;;5427:39:28::2;;;;;;;;:::i;:::-;-1:-1:-1::0;5500:12:28::2;::::0;;;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;;;5500:12:28::2;::::0;::::2;::::0;-1:-1:-1;;;;;5481:17:28;::::2;5473:40;;;;-1:-1:-1::0;;;5473:40:28::2;;;;;;;;:::i;:::-;;5522:24;5532:3;5537:8;5522:9;:24::i;:::-;5373:179;2545:1:::1;2300:252:::0;5186:366;;;;:::o;4431:179::-;4561:43;4579:5;4586:3;4591:8;4561:43;;;;;;;;;;;;:17;:43::i;:::-;4431:179;;;:::o;7736:208::-;7833:14;7868:19;;;:9;:19;;;;;;;;;;7924:13;;;;;;;;;;;-1:-1:-1;;;7924:13:28;;;;;;;-1:-1:-1;;;;;7868:19:28;;7902:20;7894:44;;;;-1:-1:-1;;;7894:44:28;;;;;;;;:::i;7262:204::-;7408:12;;;;;;;;;;;;-1:-1:-1;;;7408:12:28;;;;7359:7;;-1:-1:-1;;;;;7386:20:28;;7378:43;;;;-1:-1:-1;;;7378:43:28;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;12115:27:28;12089:7;12115:27;;;:19;:27;;;;;;;7262:204::o;1169:128:27:-;1239:21;1282:9;1272:19;;;;;:::i;6736:232:28:-;6868:10;6851:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;6851:39:28;;;;;;;;;;;;:51;;-1:-1:-1;;6851:51:28;;;;;;;;;;6914:48;;4480:41:32;;;6851:39:28;;6868:10;6914:48;;4453:18:32;6914:48:28;;;;;;;6736:232;;:::o;3811:209::-;3968:46;3986:5;3993:3;3998:8;4008:5;;3968:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3968:17:28;;-1:-1:-1;;;3968:46:28:i;:::-;3811:209;;;;;:::o;1450:181:27:-;2774:1:28;2743:19;;;:9;:19;;;;;;;;;;2778:13;;;;;;;;;;;-1:-1:-1;;;2778:13:28;;;;;;;1576::27;;1552:8;;-1:-1:-1;;;;;2743:19:28;2735:57;;;;-1:-1:-1;;;2735:57:28;;;;;;;;:::i;:::-;-1:-1:-1;1608:17:27::1;::::0;;;:7:::1;:17;::::0;;;;1601:24;;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1450:181:::0;;;;:::o;9023:275:28:-;9112:12;9127:19;;;:9;:19;;;;;;;;;13231:12;:22;;;;;;13224:29;;-1:-1:-1;;13224:29:28;;;-1:-1:-1;;;;;9127:19:28;9186:30;9201:4;9207:8;9186:14;:30::i;:::-;9223:26;9235:3;9240:8;9223:11;:26::i;:::-;9283:8;9278:3;-1:-1:-1;;;;;9263:29:28;9272:4;-1:-1:-1;;;;;9263:29:28;;;;;;;;;;;9105:193;9023:275;;:::o;12426:590::-;2307:18;2328:19;;;:9;:19;;;;;;12574:8;;-1:-1:-1;;;;;2328:19:28;2384:10;2370:24;;;:71;;-1:-1:-1;2405:22:28;;;;:12;:22;;;;;;-1:-1:-1;;;;;2405:22:28;2431:10;2405:36;2370:71;:122;;;-1:-1:-1;;;;;;2452:28:28;;;;;;:16;:28;;;;;;;;2481:10;2452:40;;;;;;;;;;2370:122;2501:30;;;;;;;;;;;;;-1:-1:-1;;;2501:30:28;;;2354:184;;;;;-1:-1:-1;;;2354:184:28;;;;;;;;:::i;:::-;-1:-1:-1;2774:1:28::1;2743:19:::0;;;:9:::1;:19;::::0;;;;;;;;;2778:13;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;2778:13:28;;::::1;::::0;;;;12602:8;;2778:13;-1:-1:-1;;;;;2743:19:28::1;2735:57;;;;-1:-1:-1::0;;;2735:57:28::1;;;;;;;;:::i;:::-;-1:-1:-1::0;12622:18:28::2;12643:19:::0;;;:9:::2;:19;::::0;;;;;;;;;12698:9;;;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;;;12698:9:28;;::::2;::::0;;;;-1:-1:-1;;;;;12643:19:28;;::::2;::::0;12698:9;12677:19;::::2;::::0;::::2;12669:39;;;;-1:-1:-1::0;;;12669:39:28::2;;;;;;;;:::i;:::-;-1:-1:-1::0;12742:12:28::2;::::0;;;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;;;12742:12:28::2;::::0;::::2;::::0;-1:-1:-1;;;;;12723:17:28;::::2;12715:40;;;;-1:-1:-1::0;;;12715:40:28::2;;;;;;;;:::i;:::-;;12764:24;12774:3;12779:8;12764:9;:24::i;:::-;12801:16;:3;-1:-1:-1::0;;;;;12801:14:28::2;;:16::i;:::-;12797:214;;;12849:77;::::0;-1:-1:-1;;;12849:77:28;;12833:13:::2;::::0;-1:-1:-1;;;;;12849:41:28;::::2;::::0;::::2;::::0;:77:::2;::::0;12891:10:::2;::::0;12903:5;;12910:8;;12920:5;;12849:77:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12979:23;::::0;;;;::::2;::::0;;;::::2;::::0;;::::2;;::::0;::::2;::::0;12833:93;;-1:-1:-1;12943:34:28;;::::2;-1:-1:-1::0;;;12943:34:28::2;12935:68;;;;-1:-1:-1::0;;;12935:68:28::2;;;;;;;;:::i;:::-;;12824:187;12797:214;12615:401;2545:1:::1;2300:252:::0;12426:590;;;;;:::o;10946:234::-;11063:19;;;;:9;:19;;;;;;;;;;11093:9;;;;;;;;;;;-1:-1:-1;;;11093:9:28;;;;;;;-1:-1:-1;;;;;11063:28:28;;;:19;;:28;11055:48;;;;-1:-1:-1;;;11055:48:28;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;11110:26:28;;;;;;:19;:26;;;;;:31;;11140:1;;11110:26;:31;;11140:1;;11110:31;:::i;:::-;;;;-1:-1:-1;;11155:19:28;;;;:9;:19;;;;;11148:26;;-1:-1:-1;;11148:26:28;;;-1:-1:-1;10946:234:28:o;11447:242::-;11590:1;11559:19;;;:9;:19;;;;;;;;;;11594:18;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11559:19:28;:33;11551:62;;;;-1:-1:-1;;;11551:62:28;;;;;;;;:::i;:::-;-1:-1:-1;11622:19:28;;;;:9;:19;;;;;;;;:25;;-1:-1:-1;;11622:25:28;-1:-1:-1;;;;;11622:25:28;;;;;;;;11654:24;;:19;:24;;;;;:29;;11622:9;;11654:24;;:29;;11622:9;;11654:29;:::i;:::-;;;;-1:-1:-1;;;;11447:242:28:o;484:780:29:-;567:17;1149:18;;1053:66;1215:15;;;;;:42;;;1246:11;1234:8;:23;;1215:42;1199:59;484:780;-1:-1:-1;;;;484:780:29:o;14:196:32:-;82:20;;-1:-1:-1;;;;;131:54:32;;121:65;;111:2;;200:1;197;190:12;111:2;63:147;;;:::o;215:186::-;274:6;327:2;315:9;306:7;302:23;298:32;295:2;;;343:1;340;333:12;295:2;366:29;385:9;366:29;:::i;:::-;356:39;285:116;-1:-1:-1;;;285:116:32:o;406:260::-;474:6;482;535:2;523:9;514:7;510:23;506:32;503:2;;;551:1;548;541:12;503:2;574:29;593:9;574:29;:::i;:::-;564:39;;622:38;656:2;645:9;641:18;622:38;:::i;:::-;612:48;;493:173;;;;;:::o;671:328::-;748:6;756;764;817:2;805:9;796:7;792:23;788:32;785:2;;;833:1;830;823:12;785:2;856:29;875:9;856:29;:::i;:::-;846:39;;904:38;938:2;927:9;923:18;904:38;:::i;:::-;894:48;;989:2;978:9;974:18;961:32;951:42;;775:224;;;;;:::o;1004:808::-;1101:6;1109;1117;1125;1133;1186:3;1174:9;1165:7;1161:23;1157:33;1154:2;;;1203:1;1200;1193:12;1154:2;1226:29;1245:9;1226:29;:::i;:::-;1216:39;;1274:38;1308:2;1297:9;1293:18;1274:38;:::i;:::-;1264:48;;1359:2;1348:9;1344:18;1331:32;1321:42;;1414:2;1403:9;1399:18;1386:32;1437:18;1478:2;1470:6;1467:14;1464:2;;;1494:1;1491;1484:12;1464:2;1532:6;1521:9;1517:22;1507:32;;1577:7;1570:4;1566:2;1562:13;1558:27;1548:2;;1599:1;1596;1589:12;1548:2;1639;1626:16;1665:2;1657:6;1654:14;1651:2;;;1681:1;1678;1671:12;1651:2;1726:7;1721:2;1712:6;1708:2;1704:15;1700:24;1697:37;1694:2;;;1747:1;1744;1737:12;1694:2;1144:668;;;;-1:-1:-1;1144:668:32;;-1:-1:-1;1778:2:32;1770:11;;1800:6;1144:668;-1:-1:-1;;;1144:668:32:o;1817:347::-;1882:6;1890;1943:2;1931:9;1922:7;1918:23;1914:32;1911:2;;;1959:1;1956;1949:12;1911:2;1982:29;2001:9;1982:29;:::i;:::-;1972:39;;2061:2;2050:9;2046:18;2033:32;2108:5;2101:13;2094:21;2087:5;2084:32;2074:2;;2130:1;2127;2120:12;2074:2;2153:5;2143:15;;;1901:263;;;;;:::o;2169:254::-;2237:6;2245;2298:2;2286:9;2277:7;2273:23;2269:32;2266:2;;;2314:1;2311;2304:12;2266:2;2337:29;2356:9;2337:29;:::i;:::-;2327:39;2413:2;2398:18;;;;2385:32;;-1:-1:-1;;;2256:167:32:o;2428:245::-;2486:6;2539:2;2527:9;2518:7;2514:23;2510:32;2507:2;;;2555:1;2552;2545:12;2507:2;2594:9;2581:23;2613:30;2637:5;2613:30;:::i;2678:249::-;2747:6;2800:2;2788:9;2779:7;2775:23;2771:32;2768:2;;;2816:1;2813;2806:12;2768:2;2848:9;2842:16;2867:30;2891:5;2867:30;:::i;2932:180::-;2991:6;3044:2;3032:9;3023:7;3019:23;3015:32;3012:2;;;3060:1;3057;3050:12;3012:2;-1:-1:-1;3083:23:32;;3002:110;-1:-1:-1;3002:110:32:o;3117:471::-;3158:3;3196:5;3190:12;3223:6;3218:3;3211:19;3248:1;3258:162;3272:6;3269:1;3266:13;3258:162;;;3334:4;3390:13;;;3386:22;;3380:29;3362:11;;;3358:20;;3351:59;3287:12;3258:162;;;3438:6;3435:1;3432:13;3429:2;;;3504:1;3497:4;3488:6;3483:3;3479:16;3475:27;3468:38;3429:2;-1:-1:-1;3570:2:32;3549:15;-1:-1:-1;;3545:29:32;3536:39;;;;3577:4;3532:50;;3166:422;-1:-1:-1;;3166:422:32:o;3824:511::-;4018:4;-1:-1:-1;;;;;4128:2:32;4120:6;4116:15;4105:9;4098:34;4180:2;4172:6;4168:15;4163:2;4152:9;4148:18;4141:43;;4220:6;4215:2;4204:9;4200:18;4193:34;4263:3;4258:2;4247:9;4243:18;4236:31;4284:45;4324:3;4313:9;4309:19;4301:6;4284:45;:::i;:::-;4276:53;4027:308;-1:-1:-1;;;;;;4027:308:32:o;4532:219::-;4681:2;4670:9;4663:21;4644:4;4701:44;4741:2;4730:9;4726:18;4718:6;4701:44;:::i;4938:128::-;4978:3;5009:1;5005:6;5002:1;4999:13;4996:2;;;5015:18;;:::i;:::-;-1:-1:-1;5051:9:32;;4986:80::o;5071:125::-;5111:4;5139:1;5136;5133:8;5130:2;;;5144:18;;:::i;:::-;-1:-1:-1;5181:9:32;;5120:76::o;5201:437::-;5280:1;5276:12;;;;5323;;;5344:2;;5398:4;5390:6;5386:17;5376:27;;5344:2;5451;5443:6;5440:14;5420:18;5417:38;5414:2;;;-1:-1:-1;;;5485:1:32;5478:88;5589:4;5586:1;5579:15;5617:4;5614:1;5607:15;5643:184;-1:-1:-1;;;5692:1:32;5685:88;5792:4;5789:1;5782:15;5816:4;5813:1;5806:15;5832:177;5917:66;5910:5;5906:78;5899:5;5896:89;5886:2;;5999:1;5996;5989:12;5886:2;5876:133;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./nf-token.sol\";\r\nimport \"./erc721-metadata.sol\";\r\n\r\n/**\r\n * @dev Optional metadata implementation for ERC-721 non-fungible token standard.\r\n */\r\ncontract NFTokenMetadata is\r\n  NFToken,\r\n  ERC721Metadata\r\n{\r\n\r\n  /**\r\n   * @dev A descriptive name for a collection of NFTs.\r\n   */\r\n  string internal nftName;\r\n\r\n  /**\r\n   * @dev An abbreviated name for NFTokens.\r\n   */\r\n  string internal nftSymbol;\r\n\r\n  /**\r\n   * @dev Mapping from NFT ID to metadata uri.\r\n   */\r\n  mapping (uint256 => string) internal idToUri;\r\n\r\n  /**\r\n   * @notice When implementing this contract don't forget to set nftName and nftSymbol.\r\n   * @dev Contract constructor.\r\n   */\r\n  constructor()\r\n  {\r\n    supportedInterfaces[0x5b5e139f] = true; // ERC721Metadata\r\n  }\r\n\r\n  /**\r\n   * @dev Returns a descriptive name for a collection of NFTokens.\r\n   * @return _name Representing name.\r\n   */\r\n  function name()\r\n    external\r\n    override\r\n    view\r\n    returns (string memory _name)\r\n  {\r\n    _name = nftName;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns an abbreviated name for NFTokens.\r\n   * @return _symbol Representing symbol.\r\n   */\r\n  function symbol()\r\n    external\r\n    override\r\n    view\r\n    returns (string memory _symbol)\r\n  {\r\n    _symbol = nftSymbol;\r\n  }\r\n\r\n  /**\r\n   * @dev A distinct URI (RFC 3986) for a given NFT.\r\n   * @param _tokenId Id for which we want uri.\r\n   * @return URI of _tokenId.\r\n   */\r\n  function tokenURI(\r\n    uint256 _tokenId\r\n  )\r\n    external\r\n    override\r\n    view\r\n    validNFToken(_tokenId)\r\n    returns (string memory)\r\n  {\r\n    return idToUri[_tokenId];\r\n  }\r\n\r\n  /**\r\n   * @notice This is an internal function which should be called from user-implemented external\r\n   * burn function. Its purpose is to show and properly initialize data structures when using this\r\n   * implementation. Also, note that this burn implementation allows the minter to re-mint a burned\r\n   * NFT.\r\n   * @dev Burns a NFT.\r\n   * @param _tokenId ID of the NFT to be burned.\r\n   */\r\n  function _burn(\r\n    uint256 _tokenId\r\n  )\r\n    internal\r\n    override\r\n    virtual\r\n  {\r\n    super._burn(_tokenId);\r\n\r\n    delete idToUri[_tokenId];\r\n  }\r\n\r\n  /**\r\n   * @notice This is an internal function which should be called from user-implemented external\r\n   * function. Its purpose is to show and properly initialize data structures when using this\r\n   * implementation.\r\n   * @dev Set a distinct URI (RFC 3986) for a given NFT ID.\r\n   * @param _tokenId Id for which we want URI.\r\n   * @param _uri String representing RFC 3986 URI.\r\n   */\r\n  function _setTokenUri(\r\n    uint256 _tokenId,\r\n    string memory _uri\r\n  )\r\n    internal\r\n    validNFToken(_tokenId)\r\n  {\r\n    idToUri[_tokenId] = _uri;\r\n  }\r\n\r\n}\r\n",
  "sourcePath": "C:\\Users\\jacky\\Desktop\\JRiffAuction\\contracts\\tokens\\nf-token-metadata.sol",
  "ast": {
    "absolutePath": "project:/contracts/tokens/nf-token-metadata.sol",
    "exportedSymbols": {
      "AddressUtils": [
        4216
      ],
      "ERC165": [
        4228
      ],
      "ERC721": [
        3077
      ],
      "ERC721Metadata": [
        2946
      ],
      "ERC721TokenReceiver": [
        2964
      ],
      "NFToken": [
        4184
      ],
      "NFTokenMetadata": [
        3514
      ],
      "SupportsInterface": [
        4265
      ]
    },
    "id": 3515,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3406,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:27"
      },
      {
        "absolutePath": "project:/contracts/tokens/nf-token.sol",
        "file": "./nf-token.sol",
        "id": 3407,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3515,
        "sourceUnit": 4185,
        "src": "60:24:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/tokens/erc721-metadata.sol",
        "file": "./erc721-metadata.sol",
        "id": 3408,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3515,
        "sourceUnit": 2947,
        "src": "86:31:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3410,
              "name": "NFToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4184,
              "src": "245:7:27"
            },
            "id": 3411,
            "nodeType": "InheritanceSpecifier",
            "src": "245:7:27"
          },
          {
            "baseName": {
              "id": 3412,
              "name": "ERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2946,
              "src": "257:14:27"
            },
            "id": 3413,
            "nodeType": "InheritanceSpecifier",
            "src": "257:14:27"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3409,
          "nodeType": "StructuredDocumentation",
          "src": "121:91:27",
          "text": " @dev Optional metadata implementation for ERC-721 non-fungible token standard."
        },
        "fullyImplemented": true,
        "id": 3514,
        "linearizedBaseContracts": [
          3514,
          2946,
          4184,
          4265,
          4228,
          3077
        ],
        "name": "NFTokenMetadata",
        "nameLocation": "223:15:27",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 3414,
              "nodeType": "StructuredDocumentation",
              "src": "280:66:27",
              "text": " @dev A descriptive name for a collection of NFTs."
            },
            "id": 3416,
            "mutability": "mutable",
            "name": "nftName",
            "nameLocation": "366:7:27",
            "nodeType": "VariableDeclaration",
            "scope": 3514,
            "src": "350:23:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3415,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "350:6:27",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 3417,
              "nodeType": "StructuredDocumentation",
              "src": "380:55:27",
              "text": " @dev An abbreviated name for NFTokens."
            },
            "id": 3419,
            "mutability": "mutable",
            "name": "nftSymbol",
            "nameLocation": "455:9:27",
            "nodeType": "VariableDeclaration",
            "scope": 3514,
            "src": "439:25:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3418,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "439:6:27",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 3420,
              "nodeType": "StructuredDocumentation",
              "src": "471:58:27",
              "text": " @dev Mapping from NFT ID to metadata uri."
            },
            "id": 3424,
            "mutability": "mutable",
            "name": "idToUri",
            "nameLocation": "570:7:27",
            "nodeType": "VariableDeclaration",
            "scope": 3514,
            "src": "533:44:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 3423,
              "keyType": {
                "id": 3421,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "542:7:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "533:27:27",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 3422,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "553:6:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3434,
              "nodeType": "Block",
              "src": "737:69:27",
              "statements": [
                {
                  "expression": {
                    "id": 3432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3428,
                        "name": "supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4239,
                        "src": "744:19:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 3430,
                      "indexExpression": {
                        "hexValue": "30783562356531333966",
                        "id": 3429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "764:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1532892063_by_1",
                          "typeString": "int_const 1532892063"
                        },
                        "value": "0x5b5e139f"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "744:31:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "778:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "744:38:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3433,
                  "nodeType": "ExpressionStatement",
                  "src": "744:38:27"
                }
              ]
            },
            "documentation": {
              "id": 3425,
              "nodeType": "StructuredDocumentation",
              "src": "584:132:27",
              "text": " @notice When implementing this contract don't forget to set nftName and nftSymbol.\n @dev Contract constructor."
            },
            "id": 3435,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "731:2:27"
            },
            "returnParameters": {
              "id": 3427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "737:0:27"
            },
            "scope": 3514,
            "src": "720:86:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2931
            ],
            "body": {
              "id": 3446,
              "nodeType": "Block",
              "src": "1025:28:27",
              "statements": [
                {
                  "expression": {
                    "id": 3444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3442,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3440,
                      "src": "1032:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3443,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3416,
                      "src": "1040:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1032:15:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 3445,
                  "nodeType": "ExpressionStatement",
                  "src": "1032:15:27"
                }
              ]
            },
            "documentation": {
              "id": 3436,
              "nodeType": "StructuredDocumentation",
              "src": "812:117:27",
              "text": " @dev Returns a descriptive name for a collection of NFTokens.\n @return _name Representing name."
            },
            "functionSelector": "06fdde03",
            "id": 3447,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "942:4:27",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3438,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "968:8:27"
            },
            "parameters": {
              "id": 3437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "946:2:27"
            },
            "returnParameters": {
              "id": 3441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3440,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1015:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 3447,
                  "src": "1001:19:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3439,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1001:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1000:21:27"
            },
            "scope": 3514,
            "src": "933:120:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2937
            ],
            "body": {
              "id": 3458,
              "nodeType": "Block",
              "src": "1265:32:27",
              "statements": [
                {
                  "expression": {
                    "id": 3456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3454,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3452,
                      "src": "1272:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3455,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3419,
                      "src": "1282:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1272:19:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 3457,
                  "nodeType": "ExpressionStatement",
                  "src": "1272:19:27"
                }
              ]
            },
            "documentation": {
              "id": 3448,
              "nodeType": "StructuredDocumentation",
              "src": "1059:106:27",
              "text": " @dev Returns an abbreviated name for NFTokens.\n @return _symbol Representing symbol."
            },
            "functionSelector": "95d89b41",
            "id": 3459,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "1178:6:27",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3450,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1206:8:27"
            },
            "parameters": {
              "id": 3449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1184:2:27"
            },
            "returnParameters": {
              "id": 3453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3452,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1253:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 3459,
                  "src": "1239:21:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3451,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1239:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1238:23:27"
            },
            "scope": 3514,
            "src": "1169:128:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2945
            ],
            "body": {
              "id": 3475,
              "nodeType": "Block",
              "src": "1594:37:27",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3471,
                      "name": "idToUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3424,
                      "src": "1608:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 3473,
                    "indexExpression": {
                      "id": 3472,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3462,
                      "src": "1616:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1608:17:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 3470,
                  "id": 3474,
                  "nodeType": "Return",
                  "src": "1601:24:27"
                }
              ]
            },
            "documentation": {
              "id": 3460,
              "nodeType": "StructuredDocumentation",
              "src": "1303:143:27",
              "text": " @dev A distinct URI (RFC 3986) for a given NFT.\n @param _tokenId Id for which we want uri.\n @return URI of _tokenId."
            },
            "functionSelector": "c87b56dd",
            "id": 3476,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3466,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3462,
                    "src": "1552:8:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3467,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3465,
                  "name": "validNFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3661,
                  "src": "1539:12:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "1539:22:27"
              }
            ],
            "name": "tokenURI",
            "nameLocation": "1459:8:27",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3464,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1515:8:27"
            },
            "parameters": {
              "id": 3463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3462,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1482:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 3476,
                  "src": "1474:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3461,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1474:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1467:28:27"
            },
            "returnParameters": {
              "id": 3470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3469,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3476,
                  "src": "1576:13:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3468,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1576:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1575:15:27"
            },
            "scope": 3514,
            "src": "1450:181:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4024
            ],
            "body": {
              "id": 3494,
              "nodeType": "Block",
              "src": "2121:67:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3486,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3479,
                        "src": "2140:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3483,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2128:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadata_$3514_$",
                          "typeString": "type(contract super NFTokenMetadata)"
                        }
                      },
                      "id": 3485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4024,
                      "src": "2128:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2128:21:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3488,
                  "nodeType": "ExpressionStatement",
                  "src": "2128:21:27"
                },
                {
                  "expression": {
                    "id": 3492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2158:24:27",
                    "subExpression": {
                      "baseExpression": {
                        "id": 3489,
                        "name": "idToUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3424,
                        "src": "2165:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 3491,
                      "indexExpression": {
                        "id": 3490,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3479,
                        "src": "2173:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2165:17:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3493,
                  "nodeType": "ExpressionStatement",
                  "src": "2158:24:27"
                }
              ]
            },
            "documentation": {
              "id": 3477,
              "nodeType": "StructuredDocumentation",
              "src": "1637:393:27",
              "text": " @notice This is an internal function which should be called from user-implemented external\n burn function. Its purpose is to show and properly initialize data structures when using this\n implementation. Also, note that this burn implementation allows the minter to re-mint a burned\n NFT.\n @dev Burns a NFT.\n @param _tokenId ID of the NFT to be burned."
            },
            "id": 3495,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "2043:5:27",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3481,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2096:8:27"
            },
            "parameters": {
              "id": 3480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3479,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2063:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 3495,
                  "src": "2055:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3478,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2055:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2048:28:27"
            },
            "returnParameters": {
              "id": 3482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2121:0:27"
            },
            "scope": 3514,
            "src": "2034:154:27",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3512,
              "nodeType": "Block",
              "src": "2703:37:27",
              "statements": [
                {
                  "expression": {
                    "id": 3510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3506,
                        "name": "idToUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3424,
                        "src": "2710:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 3508,
                      "indexExpression": {
                        "id": 3507,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3498,
                        "src": "2718:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2710:17:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3509,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3500,
                      "src": "2730:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2710:24:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3511,
                  "nodeType": "ExpressionStatement",
                  "src": "2710:24:27"
                }
              ]
            },
            "documentation": {
              "id": 3496,
              "nodeType": "StructuredDocumentation",
              "src": "2194:385:27",
              "text": " @notice This is an internal function which should be called from user-implemented external\n function. Its purpose is to show and properly initialize data structures when using this\n implementation.\n @dev Set a distinct URI (RFC 3986) for a given NFT ID.\n @param _tokenId Id for which we want URI.\n @param _uri String representing RFC 3986 URI."
            },
            "id": 3513,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3503,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3498,
                    "src": "2690:8:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3504,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3502,
                  "name": "validNFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3661,
                  "src": "2677:12:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "2677:22:27"
              }
            ],
            "name": "_setTokenUri",
            "nameLocation": "2592:12:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3498,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2619:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 3513,
                  "src": "2611:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3497,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2611:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3500,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nameLocation": "2648:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 3513,
                  "src": "2634:18:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3499,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2634:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2604:53:27"
            },
            "returnParameters": {
              "id": 3505,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2703:0:27"
            },
            "scope": 3514,
            "src": "2583:157:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3515,
        "src": "214:2531:27",
        "usedErrors": []
      }
    ],
    "src": "33:2714:27"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/tokens/nf-token-metadata.sol",
    "exportedSymbols": {
      "AddressUtils": [
        4216
      ],
      "ERC165": [
        4228
      ],
      "ERC721": [
        3077
      ],
      "ERC721Metadata": [
        2946
      ],
      "ERC721TokenReceiver": [
        2964
      ],
      "NFToken": [
        4184
      ],
      "NFTokenMetadata": [
        3514
      ],
      "SupportsInterface": [
        4265
      ]
    },
    "id": 3515,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3406,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:27"
      },
      {
        "absolutePath": "project:/contracts/tokens/nf-token.sol",
        "file": "./nf-token.sol",
        "id": 3407,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3515,
        "sourceUnit": 4185,
        "src": "60:24:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/tokens/erc721-metadata.sol",
        "file": "./erc721-metadata.sol",
        "id": 3408,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3515,
        "sourceUnit": 2947,
        "src": "86:31:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3410,
              "name": "NFToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4184,
              "src": "245:7:27"
            },
            "id": 3411,
            "nodeType": "InheritanceSpecifier",
            "src": "245:7:27"
          },
          {
            "baseName": {
              "id": 3412,
              "name": "ERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2946,
              "src": "257:14:27"
            },
            "id": 3413,
            "nodeType": "InheritanceSpecifier",
            "src": "257:14:27"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3409,
          "nodeType": "StructuredDocumentation",
          "src": "121:91:27",
          "text": " @dev Optional metadata implementation for ERC-721 non-fungible token standard."
        },
        "fullyImplemented": true,
        "id": 3514,
        "linearizedBaseContracts": [
          3514,
          2946,
          4184,
          4265,
          4228,
          3077
        ],
        "name": "NFTokenMetadata",
        "nameLocation": "223:15:27",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 3414,
              "nodeType": "StructuredDocumentation",
              "src": "280:66:27",
              "text": " @dev A descriptive name for a collection of NFTs."
            },
            "id": 3416,
            "mutability": "mutable",
            "name": "nftName",
            "nameLocation": "366:7:27",
            "nodeType": "VariableDeclaration",
            "scope": 3514,
            "src": "350:23:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3415,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "350:6:27",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 3417,
              "nodeType": "StructuredDocumentation",
              "src": "380:55:27",
              "text": " @dev An abbreviated name for NFTokens."
            },
            "id": 3419,
            "mutability": "mutable",
            "name": "nftSymbol",
            "nameLocation": "455:9:27",
            "nodeType": "VariableDeclaration",
            "scope": 3514,
            "src": "439:25:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3418,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "439:6:27",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 3420,
              "nodeType": "StructuredDocumentation",
              "src": "471:58:27",
              "text": " @dev Mapping from NFT ID to metadata uri."
            },
            "id": 3424,
            "mutability": "mutable",
            "name": "idToUri",
            "nameLocation": "570:7:27",
            "nodeType": "VariableDeclaration",
            "scope": 3514,
            "src": "533:44:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 3423,
              "keyType": {
                "id": 3421,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "542:7:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "533:27:27",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 3422,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "553:6:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3434,
              "nodeType": "Block",
              "src": "737:69:27",
              "statements": [
                {
                  "expression": {
                    "id": 3432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3428,
                        "name": "supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4239,
                        "src": "744:19:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 3430,
                      "indexExpression": {
                        "hexValue": "30783562356531333966",
                        "id": 3429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "764:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1532892063_by_1",
                          "typeString": "int_const 1532892063"
                        },
                        "value": "0x5b5e139f"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "744:31:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "778:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "744:38:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3433,
                  "nodeType": "ExpressionStatement",
                  "src": "744:38:27"
                }
              ]
            },
            "documentation": {
              "id": 3425,
              "nodeType": "StructuredDocumentation",
              "src": "584:132:27",
              "text": " @notice When implementing this contract don't forget to set nftName and nftSymbol.\n @dev Contract constructor."
            },
            "id": 3435,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "731:2:27"
            },
            "returnParameters": {
              "id": 3427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "737:0:27"
            },
            "scope": 3514,
            "src": "720:86:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2931
            ],
            "body": {
              "id": 3446,
              "nodeType": "Block",
              "src": "1025:28:27",
              "statements": [
                {
                  "expression": {
                    "id": 3444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3442,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3440,
                      "src": "1032:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3443,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3416,
                      "src": "1040:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1032:15:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 3445,
                  "nodeType": "ExpressionStatement",
                  "src": "1032:15:27"
                }
              ]
            },
            "documentation": {
              "id": 3436,
              "nodeType": "StructuredDocumentation",
              "src": "812:117:27",
              "text": " @dev Returns a descriptive name for a collection of NFTokens.\n @return _name Representing name."
            },
            "functionSelector": "06fdde03",
            "id": 3447,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "942:4:27",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3438,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "968:8:27"
            },
            "parameters": {
              "id": 3437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "946:2:27"
            },
            "returnParameters": {
              "id": 3441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3440,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1015:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 3447,
                  "src": "1001:19:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3439,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1001:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1000:21:27"
            },
            "scope": 3514,
            "src": "933:120:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2937
            ],
            "body": {
              "id": 3458,
              "nodeType": "Block",
              "src": "1265:32:27",
              "statements": [
                {
                  "expression": {
                    "id": 3456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3454,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3452,
                      "src": "1272:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3455,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3419,
                      "src": "1282:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1272:19:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 3457,
                  "nodeType": "ExpressionStatement",
                  "src": "1272:19:27"
                }
              ]
            },
            "documentation": {
              "id": 3448,
              "nodeType": "StructuredDocumentation",
              "src": "1059:106:27",
              "text": " @dev Returns an abbreviated name for NFTokens.\n @return _symbol Representing symbol."
            },
            "functionSelector": "95d89b41",
            "id": 3459,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "1178:6:27",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3450,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1206:8:27"
            },
            "parameters": {
              "id": 3449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1184:2:27"
            },
            "returnParameters": {
              "id": 3453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3452,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1253:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 3459,
                  "src": "1239:21:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3451,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1239:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1238:23:27"
            },
            "scope": 3514,
            "src": "1169:128:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2945
            ],
            "body": {
              "id": 3475,
              "nodeType": "Block",
              "src": "1594:37:27",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3471,
                      "name": "idToUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3424,
                      "src": "1608:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 3473,
                    "indexExpression": {
                      "id": 3472,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3462,
                      "src": "1616:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1608:17:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 3470,
                  "id": 3474,
                  "nodeType": "Return",
                  "src": "1601:24:27"
                }
              ]
            },
            "documentation": {
              "id": 3460,
              "nodeType": "StructuredDocumentation",
              "src": "1303:143:27",
              "text": " @dev A distinct URI (RFC 3986) for a given NFT.\n @param _tokenId Id for which we want uri.\n @return URI of _tokenId."
            },
            "functionSelector": "c87b56dd",
            "id": 3476,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3466,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3462,
                    "src": "1552:8:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3467,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3465,
                  "name": "validNFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3661,
                  "src": "1539:12:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "1539:22:27"
              }
            ],
            "name": "tokenURI",
            "nameLocation": "1459:8:27",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3464,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1515:8:27"
            },
            "parameters": {
              "id": 3463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3462,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1482:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 3476,
                  "src": "1474:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3461,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1474:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1467:28:27"
            },
            "returnParameters": {
              "id": 3470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3469,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3476,
                  "src": "1576:13:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3468,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1576:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1575:15:27"
            },
            "scope": 3514,
            "src": "1450:181:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4024
            ],
            "body": {
              "id": 3494,
              "nodeType": "Block",
              "src": "2121:67:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3486,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3479,
                        "src": "2140:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3483,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2128:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadata_$3514_$",
                          "typeString": "type(contract super NFTokenMetadata)"
                        }
                      },
                      "id": 3485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4024,
                      "src": "2128:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2128:21:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3488,
                  "nodeType": "ExpressionStatement",
                  "src": "2128:21:27"
                },
                {
                  "expression": {
                    "id": 3492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2158:24:27",
                    "subExpression": {
                      "baseExpression": {
                        "id": 3489,
                        "name": "idToUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3424,
                        "src": "2165:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 3491,
                      "indexExpression": {
                        "id": 3490,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3479,
                        "src": "2173:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2165:17:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3493,
                  "nodeType": "ExpressionStatement",
                  "src": "2158:24:27"
                }
              ]
            },
            "documentation": {
              "id": 3477,
              "nodeType": "StructuredDocumentation",
              "src": "1637:393:27",
              "text": " @notice This is an internal function which should be called from user-implemented external\n burn function. Its purpose is to show and properly initialize data structures when using this\n implementation. Also, note that this burn implementation allows the minter to re-mint a burned\n NFT.\n @dev Burns a NFT.\n @param _tokenId ID of the NFT to be burned."
            },
            "id": 3495,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "2043:5:27",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3481,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2096:8:27"
            },
            "parameters": {
              "id": 3480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3479,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2063:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 3495,
                  "src": "2055:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3478,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2055:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2048:28:27"
            },
            "returnParameters": {
              "id": 3482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2121:0:27"
            },
            "scope": 3514,
            "src": "2034:154:27",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3512,
              "nodeType": "Block",
              "src": "2703:37:27",
              "statements": [
                {
                  "expression": {
                    "id": 3510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3506,
                        "name": "idToUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3424,
                        "src": "2710:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 3508,
                      "indexExpression": {
                        "id": 3507,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3498,
                        "src": "2718:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2710:17:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3509,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3500,
                      "src": "2730:4:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2710:24:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3511,
                  "nodeType": "ExpressionStatement",
                  "src": "2710:24:27"
                }
              ]
            },
            "documentation": {
              "id": 3496,
              "nodeType": "StructuredDocumentation",
              "src": "2194:385:27",
              "text": " @notice This is an internal function which should be called from user-implemented external\n function. Its purpose is to show and properly initialize data structures when using this\n implementation.\n @dev Set a distinct URI (RFC 3986) for a given NFT ID.\n @param _tokenId Id for which we want URI.\n @param _uri String representing RFC 3986 URI."
            },
            "id": 3513,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3503,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3498,
                    "src": "2690:8:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3504,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3502,
                  "name": "validNFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3661,
                  "src": "2677:12:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "2677:22:27"
              }
            ],
            "name": "_setTokenUri",
            "nameLocation": "2592:12:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3498,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2619:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 3513,
                  "src": "2611:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3497,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2611:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3500,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nameLocation": "2648:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 3513,
                  "src": "2634:18:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3499,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2634:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2604:53:27"
            },
            "returnParameters": {
              "id": 3505,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2703:0:27"
            },
            "scope": 3514,
            "src": "2583:157:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3515,
        "src": "214:2531:27",
        "usedErrors": []
      }
    ],
    "src": "33:2714:27"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-06T16:30:51.538Z",
  "devdoc": {
    "details": "Optional metadata implementation for ERC-721 non-fungible token standard.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Set or reaffirm the approved address for an NFT. This function can be changed to payable.",
        "params": {
          "_approved": "Address to be approved for the given NFT ID.",
          "_tokenId": "ID of the token to be approved."
        }
      },
      "balanceOf(address)": {
        "details": "Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.",
        "params": {
          "_owner": "Address for whom to query the balance."
        },
        "returns": {
          "_0": "Balance of _owner."
        }
      },
      "constructor": {
        "details": "Contract constructor."
      },
      "getApproved(uint256)": {
        "details": "Get the approved address for a single NFT.",
        "params": {
          "_tokenId": "ID of the NFT to query the approval of."
        },
        "returns": {
          "_0": "Address that _tokenId is approved for."
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Checks if `_operator` is an approved operator for `_owner`.",
        "params": {
          "_operator": "The address that acts on behalf of the owner.",
          "_owner": "The address that owns the NFTs."
        },
        "returns": {
          "_0": "True if approved for all, false otherwise."
        }
      },
      "name()": {
        "details": "Returns a descriptive name for a collection of NFTokens.",
        "returns": {
          "_name": "Representing name."
        }
      },
      "ownerOf(uint256)": {
        "details": "Returns the address of the owner of the NFT. NFTs assigned to the zero address are considered invalid, and queries about them do throw.",
        "params": {
          "_tokenId": "The identifier for an NFT."
        },
        "returns": {
          "_owner": "Address of _tokenId owner."
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
        "params": {
          "_data": "Additional data with no specified format, sent in call to `_to`.",
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Enables or disables approval for a third party (\"operator\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.",
        "params": {
          "_approved": "True if the operators is approved, false to revoke approval.",
          "_operator": "Address to add to the set of authorized operators."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Function to check which interfaces are suported by this contract.",
        "params": {
          "_interfaceID": "Id of the interface."
        },
        "returns": {
          "_0": "True if _interfaceID is supported, false otherwise."
        }
      },
      "symbol()": {
        "details": "Returns an abbreviated name for NFTokens.",
        "returns": {
          "_symbol": "Representing symbol."
        }
      },
      "tokenURI(uint256)": {
        "details": "A distinct URI (RFC 3986) for a given NFT.",
        "params": {
          "_tokenId": "Id for which we want uri."
        },
        "returns": {
          "_0": "URI of _tokenId."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      }
    },
    "stateVariables": {
      "idToUri": {
        "details": "Mapping from NFT ID to metadata uri."
      },
      "nftName": {
        "details": "A descriptive name for a collection of NFTs."
      },
      "nftSymbol": {
        "details": "An abbreviated name for NFTokens."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "approve(address,uint256)": {
        "notice": "The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner."
      },
      "constructor": {
        "notice": "When implementing this contract don't forget to set nftName and nftSymbol."
      },
      "getApproved(uint256)": {
        "notice": "Throws if `_tokenId` is not a valid NFT."
      },
      "safeTransferFrom(address,address,uint256)": {
        "notice": "This works identically to the other function with an extra data parameter, except this function just sets data to \"\"."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "notice": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`."
      },
      "setApprovalForAll(address,bool)": {
        "notice": "This works even if sender doesn't own any tokens at the time."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they may be permanently lost."
      }
    },
    "version": 1
  }
}