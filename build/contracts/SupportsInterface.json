{
  "contractName": "SupportsInterface",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of standard for detect smart contract interfaces.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Contract constructor.\"},\"supportsInterface(bytes4)\":{\"details\":\"Function to check which interfaces are suported by this contract.\",\"params\":{\"_interfaceID\":\"Id of the interface.\"},\"returns\":{\"_0\":\"True if _interfaceID is supported, false otherwise.\"}}},\"stateVariables\":{\"supportedInterfaces\":{\"details\":\"Mapping of supported intefraces. You must not set element 0xffffffff to true.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/utils/supports-interface.sol\":\"SupportsInterface\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"project:/contracts/utils/erc165.sol\":{\"keccak256\":\"0xd8c18f29926bf75aace3103a010f542399b6975d3f0a76e8b3f07f4c2fd55b0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://015f502839b075ace581add5da64411cacb6ccf1db0528c4e8efce29fb095f3b\",\"dweb:/ipfs/QmXaT1YBbnVFbGpG4Zrv6WuS7QDUyJGb6Gr7xEbGFEpWYE\"]},\"project:/contracts/utils/supports-interface.sol\":{\"keccak256\":\"0x1efe9984a265a0e4a2f2d795770e97419c2f265805a83b9a2b5502e5f8c36616\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9cc02a91a6d7b593feba6ee666f237f284710edbb4f32d1c8b701b83c69d596\",\"dweb:/ipfs/QmUkz7r8zGU8trjf7bk8cLo9sKEDMyVR6KQTdNoRU7317o\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506301ffc9a760e01b60009081526020527f67be87c3ff9960ca1e9cfac5cab2ff4747269cf9ed20c9b7306235ac35a491c5805460ff191660011790556101008061005c6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806301ffc9a714602d575b600080fd5b606f60383660046083565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081526020819052604090205460ff1690565b604051901515815260200160405180910390f35b600060208284031215609457600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811460c357600080fd5b939250505056fea2646970667358221220d016478fc00fc572548a6139ecd60af6616ed6af3b5f0d1851cb7c6a1dc95ccd64736f6c63430008060033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c806301ffc9a714602d575b600080fd5b606f60383660046083565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081526020819052604090205460ff1690565b604051901515815260200160405180910390f35b600060208284031215609457600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811460c357600080fd5b939250505056fea2646970667358221220d016478fc00fc572548a6139ecd60af6616ed6af3b5f0d1851cb7c6a1dc95ccd64736f6c63430008060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:540:32",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:32",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "83:263:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "129:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "138:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "141:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "131:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "131:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "131:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "104:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "113:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "100:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "100:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "125:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "96:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "93:2:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "154:36:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "180:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "167:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "167:23:32"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "158:5:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "300:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "309:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "312:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "302:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "302:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "302:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "212:5:32"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "223:5:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "230:66:32",
                                "type": "",
                                "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "219:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "219:78:32"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "209:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "209:89:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "202:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "202:97:32"
                  },
                  "nodeType": "YulIf",
                  "src": "199:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "325:15:32",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "335:5:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "325:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "49:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "60:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "72:6:32",
                "type": ""
              }
            ],
            "src": "14:332:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "446:92:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "456:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "468:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "479:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "464:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "464:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "456:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "498:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "523:6:32"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "516:6:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "516:14:32"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "509:6:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "509:22:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "491:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "491:41:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "491:41:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "415:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "426:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "437:4:32",
                "type": ""
              }
            ],
            "src": "351:187:32"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n}",
      "id": 32,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "170:722:31:-:0;;;427:78;;;;;;;;;-1:-1:-1;;;;451:19:31;:31;;;;;;:38;;-1:-1:-1;;451:38:31;485:4;451:38;;;170:722;;;;;;",
  "deployedSourceMap": "170:722:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;715:172;;;;;;:::i;:::-;848:33;;825:4;848:33;;;;;;;;;;;;;;715:172;;;;516:14:32;;509:22;491:41;;479:2;464:18;715:172:31;;;;;;;14:332:32;72:6;125:2;113:9;104:7;100:23;96:32;93:2;;;141:1;138;131:12;93:2;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:2;;312:1;309;302:12;199:2;335:5;83:263;-1:-1:-1;;;83:263:32:o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./erc165.sol\";\r\n\r\n/**\r\n * @dev Implementation of standard for detect smart contract interfaces.\r\n */\r\ncontract SupportsInterface is\r\n  ERC165\r\n{\r\n\r\n  /**\r\n   * @dev Mapping of supported intefraces. You must not set element 0xffffffff to true.\r\n   */\r\n  mapping(bytes4 => bool) internal supportedInterfaces;\r\n\r\n  /**\r\n   * @dev Contract constructor.\r\n   */\r\n  constructor()\r\n  {\r\n    supportedInterfaces[0x01ffc9a7] = true; // ERC165\r\n  }\r\n\r\n  /**\r\n   * @dev Function to check which interfaces are suported by this contract.\r\n   * @param _interfaceID Id of the interface.\r\n   * @return True if _interfaceID is supported, false otherwise.\r\n   */\r\n  function supportsInterface(\r\n    bytes4 _interfaceID\r\n  )\r\n    external\r\n    override\r\n    view\r\n    returns (bool)\r\n  {\r\n    return supportedInterfaces[_interfaceID];\r\n  }\r\n\r\n}\r\n",
  "sourcePath": "C:\\Users\\jacky\\Desktop\\JRiffAuction\\contracts\\utils\\supports-interface.sol",
  "ast": {
    "absolutePath": "project:/contracts/utils/supports-interface.sol",
    "exportedSymbols": {
      "ERC165": [
        4228
      ],
      "SupportsInterface": [
        4265
      ]
    },
    "id": 4266,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4230,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:31"
      },
      {
        "absolutePath": "project:/contracts/utils/erc165.sol",
        "file": "./erc165.sol",
        "id": 4231,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4266,
        "sourceUnit": 4229,
        "src": "60:22:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4233,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4228,
              "src": "203:6:31"
            },
            "id": 4234,
            "nodeType": "InheritanceSpecifier",
            "src": "203:6:31"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4232,
          "nodeType": "StructuredDocumentation",
          "src": "86:82:31",
          "text": " @dev Implementation of standard for detect smart contract interfaces."
        },
        "fullyImplemented": true,
        "id": 4265,
        "linearizedBaseContracts": [
          4265,
          4228
        ],
        "name": "SupportsInterface",
        "nameLocation": "179:17:31",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 4235,
              "nodeType": "StructuredDocumentation",
              "src": "218:99:31",
              "text": " @dev Mapping of supported intefraces. You must not set element 0xffffffff to true."
            },
            "id": 4239,
            "mutability": "mutable",
            "name": "supportedInterfaces",
            "nameLocation": "354:19:31",
            "nodeType": "VariableDeclaration",
            "scope": 4265,
            "src": "321:52:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
              "typeString": "mapping(bytes4 => bool)"
            },
            "typeName": {
              "id": 4238,
              "keyType": {
                "id": 4236,
                "name": "bytes4",
                "nodeType": "ElementaryTypeName",
                "src": "329:6:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                }
              },
              "nodeType": "Mapping",
              "src": "321:23:31",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                "typeString": "mapping(bytes4 => bool)"
              },
              "valueType": {
                "id": 4237,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "339:4:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4249,
              "nodeType": "Block",
              "src": "444:61:31",
              "statements": [
                {
                  "expression": {
                    "id": 4247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4243,
                        "name": "supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4239,
                        "src": "451:19:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 4245,
                      "indexExpression": {
                        "hexValue": "30783031666663396137",
                        "id": 4244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "471:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_33540519_by_1",
                          "typeString": "int_const 33540519"
                        },
                        "value": "0x01ffc9a7"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "451:31:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 4246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "485:4:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "451:38:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4248,
                  "nodeType": "ExpressionStatement",
                  "src": "451:38:31"
                }
              ]
            },
            "documentation": {
              "id": 4240,
              "nodeType": "StructuredDocumentation",
              "src": "380:43:31",
              "text": " @dev Contract constructor."
            },
            "id": 4250,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "438:2:31"
            },
            "returnParameters": {
              "id": 4242,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "444:0:31"
            },
            "scope": 4265,
            "src": "427:78:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4227
            ],
            "body": {
              "id": 4263,
              "nodeType": "Block",
              "src": "834:53:31",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 4259,
                      "name": "supportedInterfaces",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4239,
                      "src": "848:19:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                        "typeString": "mapping(bytes4 => bool)"
                      }
                    },
                    "id": 4261,
                    "indexExpression": {
                      "id": 4260,
                      "name": "_interfaceID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4253,
                      "src": "868:12:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "848:33:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4258,
                  "id": 4262,
                  "nodeType": "Return",
                  "src": "841:40:31"
                }
              ]
            },
            "documentation": {
              "id": 4251,
              "nodeType": "StructuredDocumentation",
              "src": "511:200:31",
              "text": " @dev Function to check which interfaces are suported by this contract.\n @param _interfaceID Id of the interface.\n @return True if _interfaceID is supported, false otherwise."
            },
            "functionSelector": "01ffc9a7",
            "id": 4264,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "724:17:31",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4255,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "792:8:31"
            },
            "parameters": {
              "id": 4254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4253,
                  "mutability": "mutable",
                  "name": "_interfaceID",
                  "nameLocation": "755:12:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 4264,
                  "src": "748:19:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 4252,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "748:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "741:31:31"
            },
            "returnParameters": {
              "id": 4258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4257,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4264,
                  "src": "825:4:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4256,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "825:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "824:6:31"
            },
            "scope": 4265,
            "src": "715:172:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4266,
        "src": "170:722:31",
        "usedErrors": []
      }
    ],
    "src": "33:861:31"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/utils/supports-interface.sol",
    "exportedSymbols": {
      "ERC165": [
        4228
      ],
      "SupportsInterface": [
        4265
      ]
    },
    "id": 4266,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4230,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:31"
      },
      {
        "absolutePath": "project:/contracts/utils/erc165.sol",
        "file": "./erc165.sol",
        "id": 4231,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4266,
        "sourceUnit": 4229,
        "src": "60:22:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4233,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4228,
              "src": "203:6:31"
            },
            "id": 4234,
            "nodeType": "InheritanceSpecifier",
            "src": "203:6:31"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4232,
          "nodeType": "StructuredDocumentation",
          "src": "86:82:31",
          "text": " @dev Implementation of standard for detect smart contract interfaces."
        },
        "fullyImplemented": true,
        "id": 4265,
        "linearizedBaseContracts": [
          4265,
          4228
        ],
        "name": "SupportsInterface",
        "nameLocation": "179:17:31",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 4235,
              "nodeType": "StructuredDocumentation",
              "src": "218:99:31",
              "text": " @dev Mapping of supported intefraces. You must not set element 0xffffffff to true."
            },
            "id": 4239,
            "mutability": "mutable",
            "name": "supportedInterfaces",
            "nameLocation": "354:19:31",
            "nodeType": "VariableDeclaration",
            "scope": 4265,
            "src": "321:52:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
              "typeString": "mapping(bytes4 => bool)"
            },
            "typeName": {
              "id": 4238,
              "keyType": {
                "id": 4236,
                "name": "bytes4",
                "nodeType": "ElementaryTypeName",
                "src": "329:6:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                }
              },
              "nodeType": "Mapping",
              "src": "321:23:31",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                "typeString": "mapping(bytes4 => bool)"
              },
              "valueType": {
                "id": 4237,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "339:4:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4249,
              "nodeType": "Block",
              "src": "444:61:31",
              "statements": [
                {
                  "expression": {
                    "id": 4247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4243,
                        "name": "supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4239,
                        "src": "451:19:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 4245,
                      "indexExpression": {
                        "hexValue": "30783031666663396137",
                        "id": 4244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "471:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_33540519_by_1",
                          "typeString": "int_const 33540519"
                        },
                        "value": "0x01ffc9a7"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "451:31:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 4246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "485:4:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "451:38:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4248,
                  "nodeType": "ExpressionStatement",
                  "src": "451:38:31"
                }
              ]
            },
            "documentation": {
              "id": 4240,
              "nodeType": "StructuredDocumentation",
              "src": "380:43:31",
              "text": " @dev Contract constructor."
            },
            "id": 4250,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "438:2:31"
            },
            "returnParameters": {
              "id": 4242,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "444:0:31"
            },
            "scope": 4265,
            "src": "427:78:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4227
            ],
            "body": {
              "id": 4263,
              "nodeType": "Block",
              "src": "834:53:31",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 4259,
                      "name": "supportedInterfaces",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4239,
                      "src": "848:19:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                        "typeString": "mapping(bytes4 => bool)"
                      }
                    },
                    "id": 4261,
                    "indexExpression": {
                      "id": 4260,
                      "name": "_interfaceID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4253,
                      "src": "868:12:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "848:33:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4258,
                  "id": 4262,
                  "nodeType": "Return",
                  "src": "841:40:31"
                }
              ]
            },
            "documentation": {
              "id": 4251,
              "nodeType": "StructuredDocumentation",
              "src": "511:200:31",
              "text": " @dev Function to check which interfaces are suported by this contract.\n @param _interfaceID Id of the interface.\n @return True if _interfaceID is supported, false otherwise."
            },
            "functionSelector": "01ffc9a7",
            "id": 4264,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "724:17:31",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4255,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "792:8:31"
            },
            "parameters": {
              "id": 4254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4253,
                  "mutability": "mutable",
                  "name": "_interfaceID",
                  "nameLocation": "755:12:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 4264,
                  "src": "748:19:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 4252,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "748:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "741:31:31"
            },
            "returnParameters": {
              "id": 4258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4257,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4264,
                  "src": "825:4:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4256,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "825:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "824:6:31"
            },
            "scope": 4265,
            "src": "715:172:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4266,
        "src": "170:722:31",
        "usedErrors": []
      }
    ],
    "src": "33:861:31"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-06T16:30:51.558Z",
  "devdoc": {
    "details": "Implementation of standard for detect smart contract interfaces.",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Contract constructor."
      },
      "supportsInterface(bytes4)": {
        "details": "Function to check which interfaces are suported by this contract.",
        "params": {
          "_interfaceID": "Id of the interface."
        },
        "returns": {
          "_0": "True if _interfaceID is supported, false otherwise."
        }
      }
    },
    "stateVariables": {
      "supportedInterfaces": {
        "details": "Mapping of supported intefraces. You must not set element 0xffffffff to true."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}