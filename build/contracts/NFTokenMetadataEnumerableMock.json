{
  "contractName": "NFTokenMetadataEnumerableMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is an example contract implementation of NFToken with enumerable and metadata extensions.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Set or reaffirm the approved address for an NFT. This function can be changed to payable.\",\"params\":{\"_approved\":\"Address to be approved for the given NFT ID.\",\"_tokenId\":\"ID of the token to be approved.\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"_owner\":\"Address for whom to query the balance.\"},\"returns\":{\"_0\":\"Balance of _owner.\"}},\"burn(uint256)\":{\"details\":\"Removes a NFT from owner.\",\"params\":{\"_tokenId\":\"Which NFT we want to remove.\"}},\"constructor\":{\"details\":\"Contract constructor.\",\"params\":{\"_name\":\"A descriptive name for a collection of NFTs.\",\"_symbol\":\"An abbreviated name for NFTokens.\"}},\"getApproved(uint256)\":{\"details\":\"Get the approved address for a single NFT.\",\"params\":{\"_tokenId\":\"ID of the NFT to query the approval of.\"},\"returns\":{\"_0\":\"Address that _tokenId is approved for.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Checks if `_operator` is an approved operator for `_owner`.\",\"params\":{\"_operator\":\"The address that acts on behalf of the owner.\",\"_owner\":\"The address that owns the NFTs.\"},\"returns\":{\"_0\":\"True if approved for all, false otherwise.\"}},\"mint(address,uint256,string)\":{\"details\":\"Mints a new NFT.\",\"params\":{\"_to\":\"The address that will own the minted NFT.\",\"_tokenId\":\"of the NFT to be minted by the msg.sender.\",\"_uri\":\"String representing RFC 3986 URI.\"}},\"name()\":{\"details\":\"Returns a descriptive name for a collection of NFTokens.\",\"returns\":{\"_name\":\"Representing name.\"}},\"ownerOf(uint256)\":{\"details\":\"Returns the address of the owner of the NFT. NFTs assigned to the zero address are considered invalid, and queries about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT.\"},\"returns\":{\"_owner\":\"Address of _tokenId owner.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.\",\"params\":{\"_data\":\"Additional data with no specified format, sent in call to `_to`.\",\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Enables or disables approval for a third party (\\\"operator\\\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.\",\"params\":{\"_approved\":\"True if the operators is approved, false to revoke approval.\",\"_operator\":\"Address to add to the set of authorized operators.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Function to check which interfaces are suported by this contract.\",\"params\":{\"_interfaceID\":\"Id of the interface.\"},\"returns\":{\"_0\":\"True if _interfaceID is supported, false otherwise.\"}},\"symbol()\":{\"details\":\"Returns an abbreviated name for NFTokens.\",\"returns\":{\"_symbol\":\"Representing symbol.\"}},\"tokenByIndex(uint256)\":{\"details\":\"Returns NFT ID by its index.\",\"params\":{\"_index\":\"A counter less than `totalSupply()`.\"},\"returns\":{\"_0\":\"Token id.\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"returns the n-th NFT ID from a list of owner's tokens.\",\"params\":{\"_index\":\"Index number representing n-th token in owner's list of tokens.\",\"_owner\":\"Token owner's address.\"},\"returns\":{\"_0\":\"Token id.\"}},\"tokenURI(uint256)\":{\"details\":\"A distinct URI (RFC 3986) for a given NFT.\",\"params\":{\"_tokenId\":\"Id for which we want uri.\"},\"returns\":{\"_0\":\"URI of _tokenId.\"}},\"totalSupply()\":{\"details\":\"Returns the count of all existing NFTokens.\",\"returns\":{\"_0\":\"Total supply of NFTs.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\"},\"getApproved(uint256)\":{\"notice\":\"Throws if `_tokenId` is not a valid NFT.\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"This works identically to the other function with an extra data parameter, except this function just sets data to \\\"\\\".\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\\\"onERC721Received(address,uint256,bytes)\\\"))`.\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"This works even if sender doesn't own any tokens at the time.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they may be permanently lost.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/mocks/nf-token-metadata-enumerable-mock.sol\":\"NFTokenMetadataEnumerableMock\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"project:/contracts/mocks/nf-token-metadata-enumerable-mock.sol\":{\"keccak256\":\"0x422bd62efd317d1cdfe57f446ce05dbaba97135c1ba94ed131a6c2bc32bd8efc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f0bfef36332b6aad20ed94f544b822173015f11676de378aa40d073fe0c5805\",\"dweb:/ipfs/QmWNgRL3CgB5fEcbMfubQrzUqCJWMFEiHEipuYv8yFcmkn\"]},\"project:/contracts/ownership/ownable.sol\":{\"keccak256\":\"0xf32759667b20bd3a1318ef3ff563031543295d03a4cb179fa5158e791977a0aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e331754b7816442fcd79a6c2b4485549225b801296a312e63d015c9c8ac3cb\",\"dweb:/ipfs/QmXPwkiEMaEyuEcMR3jHo18kkxS1ioyB8WnVK5neoEmdGQ\"]},\"project:/contracts/tokens/erc721-enumerable.sol\":{\"keccak256\":\"0x05ce6fd319730e86762a917b0f2756920400299a11bd0573e6e4ce0c7326719d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16e4c60cff70e492649c051bd28ef453b12589b4a6ff5a5025d1428cef91691a\",\"dweb:/ipfs/QmaN69K6KLYLZbXFxdVoZk9QNXwvy4bmbvLsgg5a3ecqpD\"]},\"project:/contracts/tokens/erc721-metadata.sol\":{\"keccak256\":\"0x42f83c7b536d7356e6c0ad76906aec2d4788174c3bc2ff6932689d79f84593e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63f4cc120bb4a795b76c75890472067f934ee266f99df4a605782e82b0384f46\",\"dweb:/ipfs/QmRDFCRSsj13kGD4M4Sfpag5QLH6n7jwSpeDTRk6JiRpnk\"]},\"project:/contracts/tokens/erc721-token-receiver.sol\":{\"keccak256\":\"0x841d6c556e9813b2276ed73c295f984ef9229b2f082ad458de196aa5aeebd483\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44869eb9eaa25fada3db53623a3807e233ff2856c1f3c03dd248b6b3a9180672\",\"dweb:/ipfs/QmV7apf2bACmGtmRgCXfQjVmaKYpAP4MmaJq16swCPmc4V\"]},\"project:/contracts/tokens/erc721.sol\":{\"keccak256\":\"0x96c3cef85c3ff14676494b4ee580330449a3f1dc625d63132da14825d64c9eff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://286ead0a0462452fbd9008a01a7aebe02b1b84c10c7e0be9bb8aeff0d4bb04f6\",\"dweb:/ipfs/QmcmJiRmCkViPkkVGgj9WANhrZzWC6X9QtzvZrSiqT8kCg\"]},\"project:/contracts/tokens/nf-token-enumerable.sol\":{\"keccak256\":\"0x607bde0a2d247666ee5aaf2f889f9c35b5f65410445f77ed2023ee31db94d93f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://183ee800185ad252e5b15469522ad4cfad5fb81a0eb9b1b7c64d161f9511dd39\",\"dweb:/ipfs/Qme6D9iBarnDkDGrnFKnkdDJskTESZZaFfDSgfMXMYcpi7\"]},\"project:/contracts/tokens/nf-token-metadata.sol\":{\"keccak256\":\"0xa91f58d3ceb8e2685bae3c367257c8d5aa880b6fb534817a44b735718b6711d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca75804486d71273bc17f60b069f3515cdde425ffaa87cb565546328f31742a0\",\"dweb:/ipfs/QmcgDQ4uvLCNw5eRw5FT4h7jUNtHJbPZnfn6jh36Cpm5x9\"]},\"project:/contracts/tokens/nf-token.sol\":{\"keccak256\":\"0xd18f3691d0a52df5c22a1557230ca8b319a4c41801fbd2eb4fe2c8bcdad8ad7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cb8be1fc63ae8bac4d4a6a9d6a706f4a3fe869406a0d0f555b4a5b7243fb580\",\"dweb:/ipfs/QmQcBdEULE19kPQciM6X6NHeaxk79FXFWPdd7F2ax6HvQP\"]},\"project:/contracts/utils/address-utils.sol\":{\"keccak256\":\"0x29cdeb28f1e34c1239b2f82d689e0ffd6b8a95daf603d5433c893074f3ccb7f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c95907b58747d92a0a53135d8de085a2e44335af62ec00c67ab4739742a595\",\"dweb:/ipfs/QmUGiu6HXg3rL3RfDKjH95jksjEmTcagNEc5id7DDBWpnk\"]},\"project:/contracts/utils/erc165.sol\":{\"keccak256\":\"0xd8c18f29926bf75aace3103a010f542399b6975d3f0a76e8b3f07f4c2fd55b0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://015f502839b075ace581add5da64411cacb6ccf1db0528c4e8efce29fb095f3b\",\"dweb:/ipfs/QmXaT1YBbnVFbGpG4Zrv6WuS7QDUyJGb6Gr7xEbGFEpWYE\"]},\"project:/contracts/utils/supports-interface.sol\":{\"keccak256\":\"0x1efe9984a265a0e4a2f2d795770e97419c2f265805a83b9a2b5502e5f8c36616\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9cc02a91a6d7b593feba6ee666f237f284710edbb4f32d1c8b701b83c69d596\",\"dweb:/ipfs/QmUkz7r8zGU8trjf7bk8cLo9sKEDMyVR6KQTdNoRU7317o\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001ddd38038062001ddd833981016040819052620000349162000295565b600060208181527f67be87c3ff9960ca1e9cfac5cab2ff4747269cf9ed20c9b7306235ac35a491c5805460ff1990811660019081179092557ff7815fccbf112960a73756e185887fedcb9fc64ca0a16cc5923b7960ed78080080548216831790557f77b7bbe0e49b76487c9476b5db3354cf5270619d0037ccb899c2a4c4a75b43188054821683179055635b5e139f60e01b9093527f9562381dfbc2d8b8b66e765249f330164b73e329e5f01670660643571d1974df805490931617909155600c80546001600160a01b03191633179055825162000119916009919085019062000138565b5080516200012f90600a90602084019062000138565b50505062000352565b8280546200014690620002ff565b90600052602060002090601f0160209004810192826200016a5760008555620001b5565b82601f106200018557805160ff1916838001178555620001b5565b82800160010185558215620001b5579182015b82811115620001b557825182559160200191906001019062000198565b50620001c3929150620001c7565b5090565b5b80821115620001c35760008155600101620001c8565b600082601f830112620001f057600080fd5b81516001600160401b03808211156200020d576200020d6200033c565b604051601f8301601f19908116603f011681019082821181831017156200023857620002386200033c565b816040528381526020925086838588010111156200025557600080fd5b600091505b838210156200027957858201830151818301840152908201906200025a565b838211156200028b5760008385830101525b9695505050505050565b60008060408385031215620002a957600080fd5b82516001600160401b0380821115620002c157600080fd5b620002cf86838701620001de565b93506020850151915080821115620002e657600080fd5b50620002f585828601620001de565b9150509250929050565b600181811c908216806200031457607f821691505b602082108114156200033657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b611a7b80620003626000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80634f6ccce7116100b2578063a22cb46511610081578063c87b56dd11610066578063c87b56dd146102af578063d3fc9864146102c2578063e985e9c5146102d557600080fd5b8063a22cb46514610289578063b88d4fde1461029c57600080fd5b80634f6ccce7146102485780636352211e1461025b57806370a082311461026e57806395d89b411461028157600080fd5b806318160ddd116101095780632f745c59116100ee5780632f745c591461020f57806342842e0e1461022257806342966c681461023557600080fd5b806318160ddd146101ea57806323b872dd146101fc57600080fd5b806301ffc9a71461013b57806306fdde0314610195578063081812fc146101aa578063095ea7b3146101d5575b600080fd5b6101806101493660046118a2565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081526020819052604090205460ff1690565b60405190151581526020015b60405180910390f35b61019d610311565b60405161018c919061197e565b6101bd6101b83660046118dc565b6103a3565b6040516001600160a01b03909116815260200161018c565b6101e86101e336600461181e565b610425565b005b6005545b60405190815260200161018c565b6101e861020a366004611737565b6105f5565b6101ee61021d36600461181e565b6107b0565b6101e8610230366004611737565b610847565b6101e86102433660046118dc565b610867565b6101ee6102563660046118dc565b6108bd565b6101bd6102693660046118dc565b610925565b6101ee61027c3660046116e2565b61097d565b61019d6109d4565b6101e86102973660046117e2565b6109e3565b6101e86102aa366004611773565b610a4f565b61019d6102bd3660046118dc565b610a98565b6101e86102d0366004611848565b610b93565b6101806102e3366004611704565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b606060098054610320906119b6565b80601f016020809104026020016040519081016040528092919081815260200182805461034c906119b6565b80156103995780601f1061036e57610100808354040283529160200191610399565b820191906000526020600020905b81548152906001019060200180831161037c57829003601f168201915b5050505050905090565b6000818152600160209081526040808320548151808301909252600682526518181998181960d11b9282019290925283916001600160a01b03166104035760405162461bcd60e51b81526004016103fa919061197e565b60405180910390fd5b506000838152600260205260409020546001600160a01b031691505b50919050565b60008181526001602052604090205481906001600160a01b03163381148061047057506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b6040518060400160405280600681526020017f3030333030330000000000000000000000000000000000000000000000000000815250906104c45760405162461bcd60e51b81526004016103fa919061197e565b50600083815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528491906001600160a01b031661051e5760405162461bcd60e51b81526004016103fa919061197e565b50600084815260016020908152604091829020548251808401909352600683527f3030333030380000000000000000000000000000000000000000000000000000918301919091526001600160a01b03908116919087168214156105955760405162461bcd60e51b81526004016103fa919061197e565b5060008581526002602052604080822080546001600160a01b0319166001600160a01b038a811691821790925591518893918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050505050565b60008181526001602052604090205481906001600160a01b03163381148061063357506000828152600260205260409020546001600160a01b031633145b8061066157506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b604051806040016040528060068152602001650c0c0ccc0c0d60d21b8152509061069e5760405162461bcd60e51b81526004016103fa919061197e565b50600083815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528491906001600160a01b03166106f85760405162461bcd60e51b81526004016103fa919061197e565b50600084815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b039081169190881682146107575760405162461bcd60e51b81526004016103fa919061197e565b5060408051808201909152600681526530303330303160d01b60208201526001600160a01b03871661079c5760405162461bcd60e51b81526004016103fa919061197e565b506107a78686610c2d565b50505050505050565b6001600160a01b0382166000908152600760209081526040808320548151808301909252600682526530303530303760d01b928201929092529083106108095760405162461bcd60e51b81526004016103fa919061197e565b506001600160a01b038316600090815260076020526040902080548390811061083457610834611a01565b9060005260206000200154905092915050565b61086283838360405180602001604052806000815250610cb8565b505050565b600c5460408051808201909152600681526530313830303160d01b6020820152906001600160a01b031633146108b05760405162461bcd60e51b81526004016103fa919061197e565b506108ba81610f95565b50565b60055460408051808201909152600681526530303530303760d01b602082015260009183106108ff5760405162461bcd60e51b81526004016103fa919061197e565b506005828154811061091357610913611a01565b90600052602060002001549050919050565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091526001600160a01b0316908161041f5760405162461bcd60e51b81526004016103fa919061197e565b60408051808201909152600681526530303330303160d01b60208201526000906001600160a01b0383166109c45760405162461bcd60e51b81526004016103fa919061197e565b506109ce82610fb5565b92915050565b6060600a8054610320906119b6565b3360008181526004602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610a9185858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610cb892505050565b5050505050565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b9183019190915260609183916001600160a01b0316610af35760405162461bcd60e51b81526004016103fa919061197e565b506000838152600b602052604090208054610b0d906119b6565b80601f0160208091040260200160405190810160405280929190818152602001828054610b39906119b6565b8015610b865780601f10610b5b57610100808354040283529160200191610b86565b820191906000526020600020905b815481529060010190602001808311610b6957829003601f168201915b5050505050915050919050565b600c5460408051808201909152600681526530313830303160d01b6020820152906001600160a01b03163314610bdc5760405162461bcd60e51b81526004016103fa919061197e565b50610be78484610fd3565b610c278383838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061103392505050565b50505050565b600081815260016020908152604080832054600290925290912080546001600160a01b03191690556001600160a01b0316610c6881836110ac565b610c7283836110ba565b81836001600160a01b0316826001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60008281526001602052604090205482906001600160a01b031633811480610cf657506000828152600260205260409020546001600160a01b031633145b80610d2457506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b604051806040016040528060068152602001650c0c0ccc0c0d60d21b81525090610d615760405162461bcd60e51b81526004016103fa919061197e565b50600084815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528591906001600160a01b0316610dbb5760405162461bcd60e51b81526004016103fa919061197e565b50600085815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b03908116919089168214610e1a5760405162461bcd60e51b81526004016103fa919061197e565b5060408051808201909152600681526530303330303160d01b60208201526001600160a01b038816610e5f5760405162461bcd60e51b81526004016103fa919061197e565b50610e6a8787610c2d565b610e7c876001600160a01b03166110c4565b15610f8b57604051630a85bd0160e11b81526000906001600160a01b0389169063150b7a0290610eb69033908d908c908c90600401611942565b602060405180830381600087803b158015610ed057600080fd5b505af1158015610ee4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0891906118bf565b60408051808201909152600681527f303033303035000000000000000000000000000000000000000000000000000060208201529091507fffffffff000000000000000000000000000000000000000000000000000000008216630a85bd0160e11b14610f885760405162461bcd60e51b81526004016103fa919061197e565b50505b5050505050505050565b610f9e81611100565b6000818152600b602052604081206108ba916115aa565b6001600160a01b0381166000908152600760205260408120546109ce565b610fdd82826111b4565b600580546001818101835560008390527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db090910183905590546110209190611991565b6000918252600660205260409091205550565b600082815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528391906001600160a01b031661108c5760405162461bcd60e51b81526004016103fa919061197e565b506000838152600b602090815260409091208351610c27928501906115e4565b6110b68282611297565b5050565b6110b68282611414565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081158015906110f85750808214155b949350505050565b611109816114d8565b60008181526006602052604081205460055490919061112a90600190611991565b905060006005828154811061114157611141611a01565b90600052602060002001549050806005848154811061116257611162611a01565b600091825260209091200155600580548061117f5761117f6119eb565b600082815260208082208301600019908101839055909201909255918152600690915260408082209390935592835250812055565b60408051808201909152600681526530303330303160d01b60208201526001600160a01b0383166111f85760405162461bcd60e51b81526004016103fa919061197e565b50600081815260016020908152604091829020548251808401909352600683526518181998181b60d11b918301919091526001600160a01b0316156112505760405162461bcd60e51b81526004016103fa919061197e565b5061125b82826110ba565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600081815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b038481169116146112f25760405162461bcd60e51b81526004016103fa919061197e565b50600081815260016020818152604080842080546001600160a01b031916905560088252808420546001600160a01b0387168552600790925283205490929161133a91611991565b90508181146113d1576001600160a01b038416600090815260076020526040812080548390811061136d5761136d611a01565b906000526020600020015490508060076000876001600160a01b03166001600160a01b0316815260200190815260200160002084815481106113b1576113b1611a01565b600091825260208083209091019290925591825260089052604090208290555b6001600160a01b03841660009081526007602052604090208054806113f8576113f86119eb565b6001900381819060005260206000200160009055905550505050565b600081815260016020908152604091829020548251808401909352600683526518181998181b60d11b918301919091526001600160a01b03161561146b5760405162461bcd60e51b81526004016103fa919061197e565b50600081815260016020818152604080842080546001600160a01b0319166001600160a01b038816908117909155808552600783529084208054808501825581865292852090920185905590925290546114c59190611991565b6000918252600860205260409091205550565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528291906001600160a01b03166115315760405162461bcd60e51b81526004016103fa919061197e565b50600082815260016020908152604080832054600290925290912080546001600160a01b03191690556001600160a01b031661156d81846110ac565b60405183906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505050565b5080546115b6906119b6565b6000825580601f106115c6575050565b601f0160209004906000526020600020908101906108ba9190611668565b8280546115f0906119b6565b90600052602060002090601f0160209004810192826116125760008555611658565b82601f1061162b57805160ff1916838001178555611658565b82800160010185558215611658579182015b8281111561165857825182559160200191906001019061163d565b50611664929150611668565b5090565b5b808211156116645760008155600101611669565b80356001600160a01b038116811461169457600080fd5b919050565b60008083601f8401126116ab57600080fd5b50813567ffffffffffffffff8111156116c357600080fd5b6020830191508360208285010111156116db57600080fd5b9250929050565b6000602082840312156116f457600080fd5b6116fd8261167d565b9392505050565b6000806040838503121561171757600080fd5b6117208361167d565b915061172e6020840161167d565b90509250929050565b60008060006060848603121561174c57600080fd5b6117558461167d565b92506117636020850161167d565b9150604084013590509250925092565b60008060008060006080868803121561178b57600080fd5b6117948661167d565b94506117a26020870161167d565b935060408601359250606086013567ffffffffffffffff8111156117c557600080fd5b6117d188828901611699565b969995985093965092949392505050565b600080604083850312156117f557600080fd5b6117fe8361167d565b91506020830135801515811461181357600080fd5b809150509250929050565b6000806040838503121561183157600080fd5b61183a8361167d565b946020939093013593505050565b6000806000806060858703121561185e57600080fd5b6118678561167d565b935060208501359250604085013567ffffffffffffffff81111561188a57600080fd5b61189687828801611699565b95989497509550505050565b6000602082840312156118b457600080fd5b81356116fd81611a17565b6000602082840312156118d157600080fd5b81516116fd81611a17565b6000602082840312156118ee57600080fd5b5035919050565b6000815180845260005b8181101561191b576020818501810151868301820152016118ff565b8181111561192d576000602083870101525b50601f01601f19169290920160200192915050565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261197460808301846118f5565b9695505050505050565b6020815260006116fd60208301846118f5565b6000828210156119b157634e487b7160e01b600052601160045260246000fd5b500390565b600181811c908216806119ca57607f821691505b6020821081141561041f57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b7fffffffff00000000000000000000000000000000000000000000000000000000811681146108ba57600080fdfea264697066735822122035d31d03413cb41fdd949ab0ed21590d73be751b95b2f6af7a0fde2cf171230964736f6c63430008060033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1985:32",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:32",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "78:821:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "127:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "136:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "129:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "129:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "129:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "106:6:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "114:4:32",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "102:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "102:17:32"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "121:3:32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "98:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "98:27:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "91:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "91:35:32"
                  },
                  "nodeType": "YulIf",
                  "src": "88:2:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "152:23:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "168:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "162:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "162:13:32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "156:2:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "184:28:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "202:2:32",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "206:1:32",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "198:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "198:10:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "210:1:32",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "194:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "194:18:32"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "188:2:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "235:22:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "237:16:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "237:18:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "237:18:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "227:2:32"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "231:2:32"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "224:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "224:10:32"
                  },
                  "nodeType": "YulIf",
                  "src": "221:2:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "266:17:32",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "280:2:32",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "276:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "276:7:32"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "270:2:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "292:23:32",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "312:2:32",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "306:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "306:9:32"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "296:6:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "324:71:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "346:6:32"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "370:2:32"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "374:4:32",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "366:3:32"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "366:13:32"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "381:2:32"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "362:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "362:22:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "386:2:32",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "358:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "358:31:32"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "391:2:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "354:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "354:40:32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "342:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "342:53:32"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "328:10:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "454:22:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "456:16:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "456:18:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "456:18:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "413:10:32"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "425:2:32"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "410:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "410:18:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "433:10:32"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "445:6:32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "430:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "430:22:32"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "407:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "407:46:32"
                  },
                  "nodeType": "YulIf",
                  "src": "404:2:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "492:2:32",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "496:10:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "485:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "485:22:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "485:22:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "523:6:32"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "531:2:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "516:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "516:18:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "516:18:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "543:14:32",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "553:4:32",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "547:2:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "603:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "612:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "615:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "605:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "605:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "605:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "580:6:32"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "588:2:32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "576:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "576:15:32"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "593:2:32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "572:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "572:24:32"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "598:3:32"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "569:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "569:33:32"
                  },
                  "nodeType": "YulIf",
                  "src": "566:2:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "628:10:32",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "637:1:32",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "632:1:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "693:87:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "722:6:32"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "730:1:32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "718:3:32"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "718:14:32"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "734:2:32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "714:3:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "714:23:32"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "offset",
                                          "nodeType": "YulIdentifier",
                                          "src": "753:6:32"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "761:1:32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "749:3:32"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "749:14:32"
                                    },
                                    {
                                      "name": "_4",
                                      "nodeType": "YulIdentifier",
                                      "src": "765:2:32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "745:3:32"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "745:23:32"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "739:5:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "739:30:32"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "707:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "707:63:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "707:63:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "658:1:32"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "661:2:32"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "655:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "655:9:32"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "665:19:32",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "667:15:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "676:1:32"
                            },
                            {
                              "name": "_4",
                              "nodeType": "YulIdentifier",
                              "src": "679:2:32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "672:3:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "672:10:32"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "667:1:32"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "651:3:32",
                    "statements": []
                  },
                  "src": "647:133:32"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "810:59:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "839:6:32"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "847:2:32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "835:3:32"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "835:15:32"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "852:2:32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "831:3:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "831:24:32"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "857:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "824:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "824:35:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "824:35:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "795:1:32"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "798:2:32"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "792:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "792:9:32"
                  },
                  "nodeType": "YulIf",
                  "src": "789:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "878:15:32",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "887:6:32"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "878:5:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "52:6:32",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "60:3:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "68:5:32",
                "type": ""
              }
            ],
            "src": "14:885:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1022:444:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1068:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1077:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1080:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1070:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1070:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1070:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1043:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1052:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1039:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1039:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1064:2:32",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1035:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1035:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "1032:2:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1093:30:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1113:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1107:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1107:16:32"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1097:6:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1132:28:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1150:2:32",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1154:1:32",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1146:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1146:10:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1158:1:32",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1142:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1142:18:32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1136:2:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1187:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1196:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1199:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1189:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1189:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1189:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1175:6:32"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1183:2:32"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1172:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1172:14:32"
                  },
                  "nodeType": "YulIf",
                  "src": "1169:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1212:71:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1255:9:32"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1266:6:32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1251:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1251:22:32"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1275:7:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1222:28:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1222:61:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1212:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1292:41:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1318:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1329:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1314:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1314:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1308:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1308:25:32"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1296:8:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1362:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1371:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1374:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1364:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1364:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1364:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "1348:8:32"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1358:2:32"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1345:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1345:16:32"
                  },
                  "nodeType": "YulIf",
                  "src": "1342:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1387:73:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1430:9:32"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "1441:8:32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1426:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1426:24:32"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1452:7:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1397:28:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1397:63:32"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1387:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "980:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "991:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1003:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1011:6:32",
                "type": ""
              }
            ],
            "src": "904:562:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1526:325:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1536:22:32",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1550:1:32",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1553:4:32"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "1546:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1546:12:32"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1536:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1567:38:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1597:4:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1603:1:32",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1593:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1593:12:32"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "1571:18:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1644:31:32",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1646:27:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1660:6:32"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1668:4:32",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1656:3:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1656:17:32"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1646:6:32"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1624:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1617:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1617:26:32"
                  },
                  "nodeType": "YulIf",
                  "src": "1614:2:32"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1734:111:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1755:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1762:3:32",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1767:10:32",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "1758:3:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1758:20:32"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1748:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1748:31:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1748:31:32"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1799:1:32",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1802:4:32",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1792:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1792:15:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1792:15:32"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1827:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1830:4:32",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1820:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1820:15:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1820:15:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1690:18:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1713:6:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1721:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1710:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1710:14:32"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "1687:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1687:38:32"
                  },
                  "nodeType": "YulIf",
                  "src": "1684:2:32"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1506:4:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1515:6:32",
                "type": ""
              }
            ],
            "src": "1471:380:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1888:95:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1905:1:32",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1912:3:32",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1917:10:32",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1908:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1908:20:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1898:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1898:31:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1898:31:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1945:1:32",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1948:4:32",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1938:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1938:15:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1938:15:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1969:1:32",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1972:4:32",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1962:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1962:15:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1962:15:32"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "1856:127:32"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 32,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6948:32",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:32",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:147:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:32"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:32"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "188:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "197:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "200:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "190:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "190:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "190:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:32"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "142:42:32",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:54:32"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:65:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:73:32"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:32"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:32",
                "type": ""
              }
            ],
            "src": "14:196:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "287:275:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "336:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "345:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "348:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "338:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "338:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "338:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "315:6:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "323:4:32",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "311:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "311:17:32"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "330:3:32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "307:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "307:27:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "300:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "300:35:32"
                  },
                  "nodeType": "YulIf",
                  "src": "297:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "361:30:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "384:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "371:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "371:20:32"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "361:6:32"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "434:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "443:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "446:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "436:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "436:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "436:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "406:6:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "414:18:32",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "403:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "403:30:32"
                  },
                  "nodeType": "YulIf",
                  "src": "400:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "459:29:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "475:6:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "483:4:32",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "471:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "471:17:32"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "459:8:32"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "540:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "549:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "552:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "542:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "542:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "542:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "511:6:32"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "519:6:32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "507:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "507:19:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "528:4:32",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "503:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "503:30:32"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "535:3:32"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "500:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "500:39:32"
                  },
                  "nodeType": "YulIf",
                  "src": "497:2:32"
                }
              ]
            },
            "name": "abi_decode_bytes_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "250:6:32",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "258:3:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "266:8:32",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "276:6:32",
                "type": ""
              }
            ],
            "src": "215:347:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "637:116:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "683:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "692:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "695:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "685:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "685:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "685:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "658:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "667:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "654:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "654:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "679:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "650:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "650:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "647:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "708:39:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "737:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "718:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "718:29:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "708:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "603:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "614:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "626:6:32",
                "type": ""
              }
            ],
            "src": "567:186:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "845:173:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "891:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "900:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "903:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "893:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "893:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "893:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "866:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "875:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "862:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "862:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "887:2:32",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "858:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "858:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "855:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "916:39:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "945:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "926:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "926:29:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "916:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "964:48:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "997:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1008:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "993:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "993:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "974:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "974:38:32"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "964:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "803:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "814:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "826:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "834:6:32",
                "type": ""
              }
            ],
            "src": "758:260:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1127:224:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1173:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1182:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1185:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1175:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1175:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1175:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1148:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1157:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1144:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1144:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1169:2:32",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1140:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1140:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "1137:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1198:39:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1227:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1208:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1208:29:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1198:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1246:48:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1279:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1290:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1275:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1275:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1256:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1256:38:32"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1246:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1303:42:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1330:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1341:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1326:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1326:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1313:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1313:32:32"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1303:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1077:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1088:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1100:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1108:6:32",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1116:6:32",
                "type": ""
              }
            ],
            "src": "1023:328:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1496:486:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1543:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1552:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1555:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1545:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1545:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1545:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1517:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1526:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1513:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1513:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1538:3:32",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1509:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1509:33:32"
                  },
                  "nodeType": "YulIf",
                  "src": "1506:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1568:39:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1597:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1578:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1578:29:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1568:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1616:48:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1649:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1660:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1645:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1645:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1626:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1626:38:32"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1616:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1673:42:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1700:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1711:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1696:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1696:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1683:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1683:32:32"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1673:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1724:46:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1755:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1766:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1751:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1751:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1738:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1738:32:32"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1728:6:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1813:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1822:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1825:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1815:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1815:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1815:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1785:6:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1793:18:32",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1782:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1782:30:32"
                  },
                  "nodeType": "YulIf",
                  "src": "1779:2:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1838:84:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1894:9:32"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1905:6:32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1890:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1890:22:32"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1914:7:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "1864:25:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1864:58:32"
                  },
                  "variables": [
                    {
                      "name": "value3_1",
                      "nodeType": "YulTypedName",
                      "src": "1842:8:32",
                      "type": ""
                    },
                    {
                      "name": "value4_1",
                      "nodeType": "YulTypedName",
                      "src": "1852:8:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1931:18:32",
                  "value": {
                    "name": "value3_1",
                    "nodeType": "YulIdentifier",
                    "src": "1941:8:32"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1931:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1958:18:32",
                  "value": {
                    "name": "value4_1",
                    "nodeType": "YulIdentifier",
                    "src": "1968:8:32"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1958:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1430:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1441:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1453:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1461:6:32",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1469:6:32",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1477:6:32",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1485:6:32",
                "type": ""
              }
            ],
            "src": "1356:626:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2071:263:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2117:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2126:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2129:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2119:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2119:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2119:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2092:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2101:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2088:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2088:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2113:2:32",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2084:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2084:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "2081:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2142:39:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2171:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2152:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2152:29:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2142:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2190:45:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2220:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2231:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2216:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2216:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2203:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2203:32:32"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2194:5:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2288:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2297:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2300:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2290:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2290:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2290:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2257:5:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2278:5:32"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2271:6:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2271:13:32"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2264:6:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2264:21:32"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2254:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2254:32:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2247:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2247:40:32"
                  },
                  "nodeType": "YulIf",
                  "src": "2244:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2313:15:32",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2323:5:32"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2313:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2029:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2040:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2052:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2060:6:32",
                "type": ""
              }
            ],
            "src": "1987:347:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2426:167:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2472:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2481:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2484:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2474:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2474:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2474:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2447:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2456:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2443:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2443:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2468:2:32",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2439:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2439:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "2436:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2497:39:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2526:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2507:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2507:29:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2497:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2545:42:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2572:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2583:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2568:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2568:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2555:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2555:32:32"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2545:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2384:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2395:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2407:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2415:6:32",
                "type": ""
              }
            ],
            "src": "2339:254:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2722:428:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2768:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2777:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2780:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2770:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2770:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2770:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2743:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2752:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2739:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2739:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2764:2:32",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2735:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2735:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "2732:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2793:39:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2822:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2803:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2803:29:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2793:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2841:42:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2868:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2879:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2864:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2864:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2851:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2851:32:32"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2841:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2892:46:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2923:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2934:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2919:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2919:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2906:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2906:32:32"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2896:6:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2981:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2990:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2993:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2983:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2983:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2983:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2953:6:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2961:18:32",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2950:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2950:30:32"
                  },
                  "nodeType": "YulIf",
                  "src": "2947:2:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3006:84:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3062:9:32"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3073:6:32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3058:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3058:22:32"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3082:7:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "3032:25:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3032:58:32"
                  },
                  "variables": [
                    {
                      "name": "value2_1",
                      "nodeType": "YulTypedName",
                      "src": "3010:8:32",
                      "type": ""
                    },
                    {
                      "name": "value3_1",
                      "nodeType": "YulTypedName",
                      "src": "3020:8:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3099:18:32",
                  "value": {
                    "name": "value2_1",
                    "nodeType": "YulIdentifier",
                    "src": "3109:8:32"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3099:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3126:18:32",
                  "value": {
                    "name": "value3_1",
                    "nodeType": "YulIdentifier",
                    "src": "3136:8:32"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "3126:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_string_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2664:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2675:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2687:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2695:6:32",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2703:6:32",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2711:6:32",
                "type": ""
              }
            ],
            "src": "2598:552:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3224:176:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3270:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3279:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3282:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3272:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3272:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3272:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3245:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3254:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3241:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3241:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3266:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3237:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3237:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "3234:2:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3295:36:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3321:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3308:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3308:23:32"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3299:5:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3364:5:32"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "3340:23:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3340:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3340:30:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3379:15:32",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3389:5:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3379:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3190:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3201:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3213:6:32",
                "type": ""
              }
            ],
            "src": "3155:245:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3485:169:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3531:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3540:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3543:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3533:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3533:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3533:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3506:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3515:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3502:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3502:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3527:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3498:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3498:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "3495:2:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3556:29:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3575:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3569:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3569:16:32"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3560:5:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3618:5:32"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "3594:23:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3594:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3594:30:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3633:15:32",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3643:5:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3633:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3451:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3462:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3474:6:32",
                "type": ""
              }
            ],
            "src": "3405:249:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3729:110:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3775:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3784:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3787:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3777:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3777:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3777:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3750:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3759:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3746:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3746:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3771:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3742:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3742:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "3739:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3800:33:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3823:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3810:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3810:23:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3800:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3695:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3706:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3718:6:32",
                "type": ""
              }
            ],
            "src": "3659:180:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3893:422:32",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3903:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3923:5:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3917:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3917:12:32"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3907:6:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3945:3:32"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3950:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3938:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3938:19:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3938:19:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3966:10:32",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3975:1:32",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "3970:1:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4037:110:32",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4051:14:32",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4061:4:32",
                          "type": "",
                          "value": "0x20"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "4055:2:32",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "4093:3:32"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "4098:1:32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4089:3:32"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4089:11:32"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "4102:2:32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4085:3:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4085:20:32"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "4121:5:32"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "4128:1:32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "4117:3:32"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4117:13:32"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "4132:2:32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4113:3:32"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4113:22:32"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "4107:5:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4107:29:32"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4078:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4078:59:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4078:59:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3996:1:32"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3999:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3993:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3993:13:32"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4007:21:32",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4009:17:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "4018:1:32"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4021:4:32",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4014:3:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4014:12:32"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4009:1:32"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3989:3:32",
                    "statements": []
                  },
                  "src": "3985:162:32"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4181:62:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "4210:3:32"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "4215:6:32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4206:3:32"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4206:16:32"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4224:4:32",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4202:3:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4202:27:32"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4231:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4195:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4195:38:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4195:38:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4162:1:32"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4165:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4159:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4159:13:32"
                  },
                  "nodeType": "YulIf",
                  "src": "4156:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4252:57:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4267:3:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4280:6:32"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4288:2:32",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4276:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4276:15:32"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4297:2:32",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "4293:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4293:7:32"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4272:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4272:29:32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4263:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4263:39:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4304:4:32",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4259:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4259:50:32"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4252:3:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3870:5:32",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3877:3:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3885:3:32",
                "type": ""
              }
            ],
            "src": "3844:471:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4421:125:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4431:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4443:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4454:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4439:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4439:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4431:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4473:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4488:6:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4496:42:32",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4484:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4484:55:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4466:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4466:74:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4466:74:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4390:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4401:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4412:4:32",
                "type": ""
              }
            ],
            "src": "4320:226:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4754:308:32",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4764:52:32",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4774:42:32",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4768:2:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4832:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4847:6:32"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4855:2:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4843:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4843:15:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4825:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4825:34:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4825:34:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4879:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4890:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4875:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4875:18:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4899:6:32"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4907:2:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4895:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4895:15:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4868:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4868:43:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4868:43:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4931:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4942:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4927:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4927:18:32"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4947:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4920:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4920:34:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4920:34:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4974:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4985:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4970:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4970:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4990:3:32",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4963:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4963:31:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4963:31:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5003:53:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "5028:6:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5040:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5051:3:32",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5036:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5036:19:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "5011:16:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5011:45:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5003:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4699:9:32",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4710:6:32",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4718:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4726:6:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4734:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4745:4:32",
                "type": ""
              }
            ],
            "src": "4551:511:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5162:92:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5172:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5184:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5195:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5180:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5180:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5172:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5214:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5239:6:32"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5232:6:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5232:14:32"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5225:6:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5225:22:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5207:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5207:41:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5207:41:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5131:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5142:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5153:4:32",
                "type": ""
              }
            ],
            "src": "5067:187:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5380:98:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5397:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5408:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5390:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5390:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5390:21:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5420:52:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5445:6:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5457:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5468:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5453:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5453:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "5428:16:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5428:44:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5420:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5349:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5360:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5371:4:32",
                "type": ""
              }
            ],
            "src": "5259:219:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5584:76:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5594:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5606:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5617:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5602:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5602:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5594:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5636:9:32"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5647:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5629:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5629:25:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5629:25:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5553:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5564:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5575:4:32",
                "type": ""
              }
            ],
            "src": "5483:177:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5714:230:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5744:168:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5765:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5768:77:32",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5758:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5758:88:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5758:88:32"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5866:1:32",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5869:4:32",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5859:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5859:15:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5859:15:32"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5894:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5897:4:32",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5887:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5887:15:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5887:15:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5730:1:32"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5733:1:32"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5727:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5727:8:32"
                  },
                  "nodeType": "YulIf",
                  "src": "5724:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5921:17:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5933:1:32"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5936:1:32"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "5929:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5929:9:32"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "5921:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5696:1:32",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5699:1:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "5705:4:32",
                "type": ""
              }
            ],
            "src": "5665:279:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6004:382:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6014:22:32",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6028:1:32",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "6031:4:32"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "6024:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6024:12:32"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "6014:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6045:38:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "6075:4:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6081:1:32",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6071:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6071:12:32"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "6049:18:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6122:31:32",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6124:27:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "6138:6:32"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6146:4:32",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "6134:3:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6134:17:32"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6124:6:32"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "6102:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6095:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6095:26:32"
                  },
                  "nodeType": "YulIf",
                  "src": "6092:2:32"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6212:168:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6233:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6236:77:32",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6226:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6226:88:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6226:88:32"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6334:1:32",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6337:4:32",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6327:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6327:15:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6327:15:32"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6362:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6365:4:32",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6355:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6355:15:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6355:15:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "6168:18:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6191:6:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6199:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "6188:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6188:14:32"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "6165:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6165:38:32"
                  },
                  "nodeType": "YulIf",
                  "src": "6162:2:32"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "5984:4:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5993:6:32",
                "type": ""
              }
            ],
            "src": "5949:437:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6423:152:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6440:1:32",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6443:77:32",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6433:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6433:88:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6433:88:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6537:1:32",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6540:4:32",
                        "type": "",
                        "value": "0x31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6530:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6530:15:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6530:15:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6561:1:32",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6564:4:32",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6554:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6554:15:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6554:15:32"
                }
              ]
            },
            "name": "panic_error_0x31",
            "nodeType": "YulFunctionDefinition",
            "src": "6391:184:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6612:152:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6629:1:32",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6632:77:32",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6622:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6622:88:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6622:88:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6726:1:32",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6729:4:32",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6719:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6719:15:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6719:15:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6750:1:32",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6753:4:32",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6743:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6743:15:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6743:15:32"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "6580:184:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6813:133:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6924:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6933:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6936:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6926:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6926:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6926:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6836:5:32"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6847:5:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6854:66:32",
                                "type": "",
                                "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6843:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6843:78:32"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6833:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6833:89:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6826:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6826:97:32"
                  },
                  "nodeType": "YulIf",
                  "src": "6823:2:32"
                }
              ]
            },
            "name": "validator_revert_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6802:5:32",
                "type": ""
              }
            ],
            "src": "6769:177:32"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_bytes(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n}",
      "id": 32,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "303:3712:18:-:0;;;572:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;451:19:31;:31;;;;;:38;;-1:-1:-1;;451:38:31;;;485:4;451:38;;;;;;2883:31:28;:38;;;;;;;;1052:31:26;:38;;;;;;;;-1:-1:-1;;;744:31:27;;;;:38;;;;;;;;;1069:5:21;:18;;-1:-1:-1;;;;;;1069:18:21;1077:10;1069:18;;;653:15:18;;;;:7;;:15;;;;;:::i;:::-;-1:-1:-1;675:19:18;;;;:9;;:19;;;;;:::i;:::-;;572:128;;303:3712;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;303:3712:18;;;-1:-1:-1;303:3712:18;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:32;68:5;121:3;114:4;106:6;102:17;98:27;88:2;;139:1;136;129:12;88:2;162:13;;-1:-1:-1;;;;;224:10:32;;;221:2;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:32;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:2;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:2;;;615:1;612;605:12;566:2;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:2;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:2;887:6;78:821;-1:-1:-1;;;;;;78:821:32:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:2;;;1080:1;1077;1070:12;1032:2;1107:16;;-1:-1:-1;;;;;1172:14:32;;;1169:2;;;1199:1;1196;1189:12;1169:2;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:2;;;1374:1;1371;1364:12;1342:2;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;1022:444;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:2;;1668:4;1660:6;1656:17;1646:27;;1614:2;1721;1713:6;1710:14;1690:18;1687:38;1684:2;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:2;;1526:325;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1888:95;303:3712:18;;;;;;",
  "deployedSourceMap": "303:3712:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;715:172:31;;;;;;:::i;:::-;848:33;;825:4;848:33;;;;;;;;;;;;;;715:172;;;;5232:14:32;;5225:22;5207:41;;5195:2;5180:18;715:172:31;;;;;;;;933:120:27;;;:::i;:::-;;;;;;;:::i;8188:183:28:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4484:55:32;;;4466:74;;4454:2;4439:18;8188:183:28;4421:125:32;5973:352:28;;;;;;:::i;:::-;;:::i;:::-;;1227:120:26;1328:6;:13;1227:120;;;5629:25:32;;;5617:2;5602:18;1227:120:26;5584:76:32;5186:366:28;;;;;;:::i;:::-;;:::i;1924:251:26:-;;;;;;:::i;:::-;;:::i;4431:179:28:-;;;;;;:::i;:::-;;:::i;1231:108:18:-;;;;;;:::i;:::-;;:::i;1488:199:26:-;;;;;;:::i;:::-;;:::i;7736:208:28:-;;;;;;:::i;:::-;;:::i;7262:204::-;;;;;;:::i;:::-;;:::i;1169:128:27:-;;;:::i;6736:232:28:-;;;;;;:::i;:::-;;:::i;3811:209::-;;;;;;:::i;:::-;;:::i;1450:181:27:-;;;;;;:::i;:::-;;:::i;924:199:18:-;;;;;;:::i;:::-;;:::i;8640:192:28:-;;;;;;:::i;:::-;-1:-1:-1;;;;;8791:24:28;;;8768:4;8791:24;;;:16;:24;;;;;;;;:35;;;;;;;;;;;;;;;8640:192;933:120:27;1001:19;1040:7;1032:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;933:120;:::o;8188:183:28:-;8317:7;2743:19;;;:9;:19;;;;;;;;;2778:13;;;;;;;;;;;-1:-1:-1;;;2778:13:28;;;;;;;8293:8;;-1:-1:-1;;;;;2743:19:28;2735:57;;;;-1:-1:-1;;;2735:57:28;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;8343:22:28::1;::::0;;;:12:::1;:22;::::0;;;;;-1:-1:-1;;;;;8343:22:28::1;::::0;-1:-1:-1;2799:1:28::1;8188:183:::0;;;;:::o;5973:352::-;1927:18;1948:19;;;:9;:19;;;;;;6086:8;;-1:-1:-1;;;;;1948:19:28;2004:10;1990:24;;;:68;;-1:-1:-1;;;;;;2018:28:28;;;;;;:16;:28;;;;;;;;2047:10;2018:40;;;;;;;;;;1990:68;2067:21;;;;;;;;;;;;;;;;;1974:121;;;;;-1:-1:-1;;;1974:121:28;;;;;;;;:::i;:::-;-1:-1:-1;2774:1:28::1;2743:19:::0;;;:9:::1;:19;::::0;;;;;;;;;2778:13;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;2778:13:28;;::::1;::::0;;;;6114:8;;2778:13;-1:-1:-1;;;;;2743:19:28::1;2735:57;;;;-1:-1:-1::0;;;2735:57:28::1;;;;;;;;:::i;:::-;-1:-1:-1::0;6134:18:28::2;6155:19:::0;;;:9:::2;:19;::::0;;;;;;;;;6214:8;;;;::::2;::::0;;;::::2;::::0;;::::2;::::0;;::::2;::::0;;;;-1:-1:-1;;;;;6155:19:28;;::::2;::::0;6214:8;6189:23;::::2;::::0;::::2;;6181:42;;;;-1:-1:-1::0;;;6181:42:28::2;;;;;;;;:::i;:::-;-1:-1:-1::0;6232:22:28::2;::::0;;;:12:::2;:22;::::0;;;;;:34;;-1:-1:-1;;;;;;6232:34:28::2;-1:-1:-1::0;;;;;6232:34:28;;::::2;::::0;;::::2;::::0;;;6278:41;;6232:22;;6278:41;;::::2;::::0;::::2;::::0;::::2;6127:198;2102:1:::1;1920:189:::0;5973:352;;;:::o;5186:366::-;2307:18;2328:19;;;:9;:19;;;;;;5332:8;;-1:-1:-1;;;;;2328:19:28;2384:10;2370:24;;;:71;;-1:-1:-1;2405:22:28;;;;:12;:22;;;;;;-1:-1:-1;;;;;2405:22:28;2431:10;2405:36;2370:71;:122;;;-1:-1:-1;;;;;;2452:28:28;;;;;;:16;:28;;;;;;;;2481:10;2452:40;;;;;;;;;;2370:122;2501:30;;;;;;;;;;;;;-1:-1:-1;;;2501:30:28;;;2354:184;;;;;-1:-1:-1;;;2354:184:28;;;;;;;;:::i;:::-;-1:-1:-1;2774:1:28::1;2743:19:::0;;;:9:::1;:19;::::0;;;;;;;;;2778:13;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;2778:13:28;;::::1;::::0;;;;5360:8;;2778:13;-1:-1:-1;;;;;2743:19:28::1;2735:57;;;;-1:-1:-1::0;;;2735:57:28::1;;;;;;;;:::i;:::-;-1:-1:-1::0;5380:18:28::2;5401:19:::0;;;:9:::2;:19;::::0;;;;;;;;;5456:9;;;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;;;5456:9:28;;::::2;::::0;;;;-1:-1:-1;;;;;5401:19:28;;::::2;::::0;5456:9;5435:19;::::2;::::0;::::2;5427:39;;;;-1:-1:-1::0;;;5427:39:28::2;;;;;;;;:::i;:::-;-1:-1:-1::0;5500:12:28::2;::::0;;;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;;;5500:12:28::2;::::0;::::2;::::0;-1:-1:-1;;;;;5481:17:28;::::2;5473:40;;;;-1:-1:-1::0;;;5473:40:28::2;;;;;;;;:::i;:::-;;5522:24;5532:3;5537:8;5522:9;:24::i;:::-;5373:179;2545:1:::1;2300:252:::0;5186:366;;;;:::o;1924:251:26:-;-1:-1:-1;;;;;2088:18:26;;2052:7;2088:18;;;:10;:18;;;;;;;;:25;2115:13;;;;;;;;;;;-1:-1:-1;;;2115:13:26;;;;;;;;2079:34;;2071:58;;;;-1:-1:-1;;;2071:58:26;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2143:18:26;;;;;;:10;:18;;;;;:26;;2162:6;;2143:26;;;;;;:::i;:::-;;;;;;;;;2136:33;;1924:251;;;;:::o;4431:179:28:-;4561:43;4579:5;4586:3;4591:8;4561:43;;;;;;;;;;;;:17;:43::i;:::-;4431:179;;;:::o;1231:108:18:-;:5:21;;1238:17;;;;;;;;;;;;-1:-1:-1;;;1238:17:21;;;;;-1:-1:-1;;;;;1231:5:21;1217:10;:19;1209:47;;;;-1:-1:-1;;;1209:47:21;;;;;;;;:::i;:::-;;1312:21:18::1;1324:8;1312:11;:21::i;:::-;1231:108:::0;:::o;1488:199:26:-;1624:6;:13;1639;;;;;;;;;;;;-1:-1:-1;;;1639:13:26;;;;1588:7;;1615:22;;1607:46;;;;-1:-1:-1;;;1607:46:26;;;;;;;;:::i;:::-;;1667:6;1674;1667:14;;;;;;;;:::i;:::-;;;;;;;;;1660:21;;1488:199;;;:::o;7736:208:28:-;7833:14;7868:19;;;:9;:19;;;;;;;;;;7924:13;;;;;;;;;;;-1:-1:-1;;;7924:13:28;;;;;;;-1:-1:-1;;;;;7868:19:28;;7902:20;7894:44;;;;-1:-1:-1;;;7894:44:28;;;;;;;;:::i;7262:204::-;7408:12;;;;;;;;;;;;-1:-1:-1;;;7408:12:28;;;;7359:7;;-1:-1:-1;;;;;7386:20:28;;7378:43;;;;-1:-1:-1;;;7378:43:28;;;;;;;;:::i;:::-;;7435:25;7453:6;7435:17;:25::i;:::-;7428:32;7262:204;-1:-1:-1;;7262:204:28:o;1169:128:27:-;1239:21;1282:9;1272:19;;;;;:::i;6736:232:28:-;6868:10;6851:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;6851:39:28;;;;;;;;;;;;:51;;-1:-1:-1;;6851:51:28;;;;;;;;;;6914:48;;5207:41:32;;;6851:39:28;;6868:10;6914:48;;5180:18:32;6914:48:28;;;;;;;6736:232;;:::o;3811:209::-;3968:46;3986:5;3993:3;3998:8;4008:5;;3968:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3968:17:28;;-1:-1:-1;;;3968:46:28:i;:::-;3811:209;;;;;:::o;1450:181:27:-;2774:1:28;2743:19;;;:9;:19;;;;;;;;;;2778:13;;;;;;;;;;;-1:-1:-1;;;2778:13:28;;;;;;;1576::27;;1552:8;;-1:-1:-1;;;;;2743:19:28;2735:57;;;;-1:-1:-1;;;2735:57:28;;;;;;;;:::i;:::-;-1:-1:-1;1608:17:27::1;::::0;;;:7:::1;:17;::::0;;;;1601:24;;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1450:181:::0;;;;:::o;924:199:18:-;1231:5:21;;1238:17;;;;;;;;;;;;-1:-1:-1;;;1238:17:21;;;;;-1:-1:-1;;;;;1231:5:21;1217:10;:19;1209:47;;;;-1:-1:-1;;;1209:47:21;;;;;;;;:::i;:::-;;1050:26:18::1;1062:3;1067:8;1050:11;:26::i;:::-;1083:34;1102:8;1112:4;;1083:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;1083:18:18::1;::::0;-1:-1:-1;;;1083:34:18:i:1;:::-;924:199:::0;;;;:::o;9023:275:28:-;9112:12;9127:19;;;:9;:19;;;;;;;;;13231:12;:22;;;;;;13224:29;;-1:-1:-1;;;;;;13224:29:28;;;-1:-1:-1;;;;;9127:19:28;9186:30;9201:4;9207:8;9186:14;:30::i;:::-;9223:26;9235:3;9240:8;9223:11;:26::i;:::-;9283:8;9278:3;-1:-1:-1;;;;;9263:29:28;9272:4;-1:-1:-1;;;;;9263:29:28;;;;;;;;;;;9105:193;9023:275;;:::o;12426:590::-;2307:18;2328:19;;;:9;:19;;;;;;12574:8;;-1:-1:-1;;;;;2328:19:28;2384:10;2370:24;;;:71;;-1:-1:-1;2405:22:28;;;;:12;:22;;;;;;-1:-1:-1;;;;;2405:22:28;2431:10;2405:36;2370:71;:122;;;-1:-1:-1;;;;;;2452:28:28;;;;;;:16;:28;;;;;;;;2481:10;2452:40;;;;;;;;;;2370:122;2501:30;;;;;;;;;;;;;-1:-1:-1;;;2501:30:28;;;2354:184;;;;;-1:-1:-1;;;2354:184:28;;;;;;;;:::i;:::-;-1:-1:-1;2774:1:28::1;2743:19:::0;;;:9:::1;:19;::::0;;;;;;;;;2778:13;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;2778:13:28;;::::1;::::0;;;;12602:8;;2778:13;-1:-1:-1;;;;;2743:19:28::1;2735:57;;;;-1:-1:-1::0;;;2735:57:28::1;;;;;;;;:::i;:::-;-1:-1:-1::0;12622:18:28::2;12643:19:::0;;;:9:::2;:19;::::0;;;;;;;;;12698:9;;;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;;;12698:9:28;;::::2;::::0;;;;-1:-1:-1;;;;;12643:19:28;;::::2;::::0;12698:9;12677:19;::::2;::::0;::::2;12669:39;;;;-1:-1:-1::0;;;12669:39:28::2;;;;;;;;:::i;:::-;-1:-1:-1::0;12742:12:28::2;::::0;;;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;;;12742:12:28::2;::::0;::::2;::::0;-1:-1:-1;;;;;12723:17:28;::::2;12715:40;;;;-1:-1:-1::0;;;12715:40:28::2;;;;;;;;:::i;:::-;;12764:24;12774:3;12779:8;12764:9;:24::i;:::-;12801:16;:3;-1:-1:-1::0;;;;;12801:14:28::2;;:16::i;:::-;12797:214;;;12849:77;::::0;-1:-1:-1;;;12849:77:28;;12833:13:::2;::::0;-1:-1:-1;;;;;12849:41:28;::::2;::::0;::::2;::::0;:77:::2;::::0;12891:10:::2;::::0;12903:5;;12910:8;;12920:5;;12849:77:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12979:23;::::0;;;;::::2;::::0;;;::::2;::::0;;::::2;;::::0;::::2;::::0;12833:93;;-1:-1:-1;12943:34:28;;::::2;-1:-1:-1::0;;;12943:34:28::2;12935:68;;;;-1:-1:-1::0;;;12935:68:28::2;;;;;;;;:::i;:::-;;12824:187;12797:214;12615:401;2545:1:::1;2300:252:::0;12426:590;;;;;:::o;2034:154:27:-;2128:21;2140:8;2128:11;:21::i;:::-;2165:17;;;;:7;:17;;;;;2158:24;;;:::i;3802:208:18:-;-1:-1:-1;;;;;5590:18:26;;3935:7:18;5590:18:26;;;:10;:18;;;;;:25;3961:43:18;5446:175:26;2566:218;2678:26;2690:3;2695:8;2678:11;:26::i;:::-;2711:6;:21;;;;;;;;-1:-1:-1;2711:21:26;;;;;;;;;;2761:13;;:17;;2711:21;2761:17;:::i;:::-;2739:19;;;;:9;:19;;;;;;:39;-1:-1:-1;2566:218:26:o;2583:157:27:-;2774:1:28;2743:19;;;:9;:19;;;;;;;;;;2778:13;;;;;;;;;;;-1:-1:-1;;;2778:13:28;;;;;;;2690:8:27;;2778:13:28;-1:-1:-1;;;;;2743:19:28;2735:57;;;;-1:-1:-1;;;2735:57:28;;;;;;;;:::i;:::-;-1:-1:-1;2710:17:27::1;::::0;;;:7:::1;:17;::::0;;;;;;;:24;;::::1;::::0;;::::1;::::0;::::1;:::i;2859:193:18:-:0;2997:49;3030:5;3037:8;2997:32;:49::i;:::-;2859:193;;:::o;3323:183::-;3456:44;3486:3;3491:8;3456:29;:44::i;484:780:29:-;567:17;1149:18;;1053:66;1215:15;;;;;:42;;;1246:11;1234:8;:23;;1215:42;1199:59;484:780;-1:-1:-1;;;;484:780:29:o;3187:495:26:-;3281:21;3293:8;3281:11;:21::i;:::-;3311:18;3332:19;;;:9;:19;;;;;;3383:6;:13;3332:19;;3311:18;3383:17;;3399:1;;3383:17;:::i;:::-;3358:42;;3407:17;3427:6;3434:14;3427:22;;;;;;;;:::i;:::-;;;;;;;;;3407:42;;3479:9;3458:6;3465:10;3458:18;;;;;;;;:::i;:::-;;;;;;;;;;:30;3497:6;:12;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;3497:12:26;;;;;;;;;;;;3613:20;;;:9;:20;;;;;;;:33;;;;3653:19;;;-1:-1:-1;3653:19:26;;:23;3187:495::o;9689:297:28:-;9814:12;;;;;;;;;;;;-1:-1:-1;;;9814:12:28;;;;-1:-1:-1;;;;;9795:17:28;;9787:40;;;;-1:-1:-1;;;9787:40:28;;;;;;;;:::i;:::-;-1:-1:-1;9873:1:28;9842:19;;;:9;:19;;;;;;;;;;9877:18;;;;;;;;;;;-1:-1:-1;;;9877:18:28;;;;;;;-1:-1:-1;;;;;9842:19:28;:33;9834:62;;;;-1:-1:-1;;;9834:62:28;;;;;;;;:::i;:::-;;9905:26;9917:3;9922:8;9905:11;:26::i;:::-;9945:35;;9971:8;;-1:-1:-1;;;;;9945:35:28;;;9962:1;;9945:35;;9962:1;;9945:35;9689:297;;:::o;3961:602:26:-;4092:19;;;;:9;:19;;;;;;;;;;4122:9;;;;;;;;;;;-1:-1:-1;;;4122:9:26;;;;;;;-1:-1:-1;;;;;4092:28:26;;;:19;;:28;4084:48;;;;-1:-1:-1;;;4084:48:26;;;;;;;;:::i;:::-;-1:-1:-1;4146:19:26;;;;:9;:19;;;;;;;;4139:26;;-1:-1:-1;;;;;;4139:26:26;;;4203:14;:24;;;;;;-1:-1:-1;;;;;4259:17:26;;;;:10;:17;;;;;:24;4203;;4146:19;4259:28;;;:::i;:::-;4234:53;;4318:18;4300:14;:36;4296:230;;-1:-1:-1;;;;;4372:17:26;;4352;4372;;;:10;:17;;;;;:33;;4390:14;;4372:33;;;;;;:::i;:::-;;;;;;;;;4352:53;;4454:9;4414:10;:17;4425:5;-1:-1:-1;;;;;4414:17:26;-1:-1:-1;;;;;4414:17:26;;;;;;;;;;;;4432:18;4414:37;;;;;;;;:::i;:::-;;;;;;;;;;;;:49;;;;4472:25;;;:14;:25;;;;;:46;;;4296:230;-1:-1:-1;;;;;4534:17:26;;;;;;:10;:17;;;;;:23;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4077:486;;3961:602;;:::o;4834:317::-;4991:1;4960:19;;;:9;:19;;;;;;;;;;4995:18;;;;;;;;;;;-1:-1:-1;;;4995:18:26;;;;;;;-1:-1:-1;;;;;4960:19:26;:33;4952:62;;;;-1:-1:-1;;;4952:62:26;;;;;;;;:::i;:::-;-1:-1:-1;5021:19:26;;;;:9;:19;;;;;;;;:25;;-1:-1:-1;;;;;;5021:25:26;-1:-1:-1;;;;;5021:25:26;;;;;;;;5055:15;;;:10;:15;;;;;:30;;;;;;;;;;;;;;;;;;;5119:15;;;:22;;:26;;5021:9;5119:26;:::i;:::-;5092:24;;;;:14;:24;;;;;;:53;-1:-1:-1;4834:317:26:o;10389:282:28:-;2774:1;2743:19;;;:9;:19;;;;;;;;;;2778:13;;;;;;;;;;;-1:-1:-1;;;2778:13:28;;;;;;;10477:8;;2778:13;-1:-1:-1;;;;;2743:19:28;2735:57;;;;-1:-1:-1;;;2735:57:28;;;;;;;;:::i;:::-;-1:-1:-1;10497:18:28::1;10518:19:::0;;;:9:::1;:19;::::0;;;;;;;;13231:12;:22;;;;;;13224:29;;-1:-1:-1;;;;;;13224:29:28;;;-1:-1:-1;;;;;10518:19:28::1;10575:36;10590:10;10602:8;10575:14;:36::i;:::-;10623:42;::::0;10656:8;;10652:1:::1;::::0;-1:-1:-1;;;;;10623:42:28;::::1;::::0;::::1;::::0;10652:1;;10623:42:::1;10490:181;10389:282:::0;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:196:32;82:20;;-1:-1:-1;;;;;131:54:32;;121:65;;111:2;;200:1;197;190:12;111:2;63:147;;;:::o;215:347::-;266:8;276:6;330:3;323:4;315:6;311:17;307:27;297:2;;348:1;345;338:12;297:2;-1:-1:-1;371:20:32;;414:18;403:30;;400:2;;;446:1;443;436:12;400:2;483:4;475:6;471:17;459:29;;535:3;528:4;519:6;511;507:19;503:30;500:39;497:2;;;552:1;549;542:12;497:2;287:275;;;;;:::o;567:186::-;626:6;679:2;667:9;658:7;654:23;650:32;647:2;;;695:1;692;685:12;647:2;718:29;737:9;718:29;:::i;:::-;708:39;637:116;-1:-1:-1;;;637:116:32:o;758:260::-;826:6;834;887:2;875:9;866:7;862:23;858:32;855:2;;;903:1;900;893:12;855:2;926:29;945:9;926:29;:::i;:::-;916:39;;974:38;1008:2;997:9;993:18;974:38;:::i;:::-;964:48;;845:173;;;;;:::o;1023:328::-;1100:6;1108;1116;1169:2;1157:9;1148:7;1144:23;1140:32;1137:2;;;1185:1;1182;1175:12;1137:2;1208:29;1227:9;1208:29;:::i;:::-;1198:39;;1256:38;1290:2;1279:9;1275:18;1256:38;:::i;:::-;1246:48;;1341:2;1330:9;1326:18;1313:32;1303:42;;1127:224;;;;;:::o;1356:626::-;1453:6;1461;1469;1477;1485;1538:3;1526:9;1517:7;1513:23;1509:33;1506:2;;;1555:1;1552;1545:12;1506:2;1578:29;1597:9;1578:29;:::i;:::-;1568:39;;1626:38;1660:2;1649:9;1645:18;1626:38;:::i;:::-;1616:48;;1711:2;1700:9;1696:18;1683:32;1673:42;;1766:2;1755:9;1751:18;1738:32;1793:18;1785:6;1782:30;1779:2;;;1825:1;1822;1815:12;1779:2;1864:58;1914:7;1905:6;1894:9;1890:22;1864:58;:::i;:::-;1496:486;;;;-1:-1:-1;1496:486:32;;-1:-1:-1;1941:8:32;;1838:84;1496:486;-1:-1:-1;;;1496:486:32:o;1987:347::-;2052:6;2060;2113:2;2101:9;2092:7;2088:23;2084:32;2081:2;;;2129:1;2126;2119:12;2081:2;2152:29;2171:9;2152:29;:::i;:::-;2142:39;;2231:2;2220:9;2216:18;2203:32;2278:5;2271:13;2264:21;2257:5;2254:32;2244:2;;2300:1;2297;2290:12;2244:2;2323:5;2313:15;;;2071:263;;;;;:::o;2339:254::-;2407:6;2415;2468:2;2456:9;2447:7;2443:23;2439:32;2436:2;;;2484:1;2481;2474:12;2436:2;2507:29;2526:9;2507:29;:::i;:::-;2497:39;2583:2;2568:18;;;;2555:32;;-1:-1:-1;;;2426:167:32:o;2598:552::-;2687:6;2695;2703;2711;2764:2;2752:9;2743:7;2739:23;2735:32;2732:2;;;2780:1;2777;2770:12;2732:2;2803:29;2822:9;2803:29;:::i;:::-;2793:39;;2879:2;2868:9;2864:18;2851:32;2841:42;;2934:2;2923:9;2919:18;2906:32;2961:18;2953:6;2950:30;2947:2;;;2993:1;2990;2983:12;2947:2;3032:58;3082:7;3073:6;3062:9;3058:22;3032:58;:::i;:::-;2722:428;;;;-1:-1:-1;3109:8:32;-1:-1:-1;;;;2722:428:32:o;3155:245::-;3213:6;3266:2;3254:9;3245:7;3241:23;3237:32;3234:2;;;3282:1;3279;3272:12;3234:2;3321:9;3308:23;3340:30;3364:5;3340:30;:::i;3405:249::-;3474:6;3527:2;3515:9;3506:7;3502:23;3498:32;3495:2;;;3543:1;3540;3533:12;3495:2;3575:9;3569:16;3594:30;3618:5;3594:30;:::i;3659:180::-;3718:6;3771:2;3759:9;3750:7;3746:23;3742:32;3739:2;;;3787:1;3784;3777:12;3739:2;-1:-1:-1;3810:23:32;;3729:110;-1:-1:-1;3729:110:32:o;3844:471::-;3885:3;3923:5;3917:12;3950:6;3945:3;3938:19;3975:1;3985:162;3999:6;3996:1;3993:13;3985:162;;;4061:4;4117:13;;;4113:22;;4107:29;4089:11;;;4085:20;;4078:59;4014:12;3985:162;;;4165:6;4162:1;4159:13;4156:2;;;4231:1;4224:4;4215:6;4210:3;4206:16;4202:27;4195:38;4156:2;-1:-1:-1;4297:2:32;4276:15;-1:-1:-1;;4272:29:32;4263:39;;;;4304:4;4259:50;;3893:422;-1:-1:-1;;3893:422:32:o;4551:511::-;4745:4;-1:-1:-1;;;;;4855:2:32;4847:6;4843:15;4832:9;4825:34;4907:2;4899:6;4895:15;4890:2;4879:9;4875:18;4868:43;;4947:6;4942:2;4931:9;4927:18;4920:34;4990:3;4985:2;4974:9;4970:18;4963:31;5011:45;5051:3;5040:9;5036:19;5028:6;5011:45;:::i;:::-;5003:53;4754:308;-1:-1:-1;;;;;;4754:308:32:o;5259:219::-;5408:2;5397:9;5390:21;5371:4;5428:44;5468:2;5457:9;5453:18;5445:6;5428:44;:::i;5665:279::-;5705:4;5733:1;5730;5727:8;5724:2;;;-1:-1:-1;;;5765:1:32;5758:88;5869:4;5866:1;5859:15;5897:4;5894:1;5887:15;5724:2;-1:-1:-1;5929:9:32;;5714:230::o;5949:437::-;6028:1;6024:12;;;;6071;;;6092:2;;6146:4;6138:6;6134:17;6124:27;;6092:2;6199;6191:6;6188:14;6168:18;6165:38;6162:2;;;-1:-1:-1;;;6233:1:32;6226:88;6337:4;6334:1;6327:15;6365:4;6362:1;6355:15;6391:184;-1:-1:-1;;;6440:1:32;6433:88;6540:4;6537:1;6530:15;6564:4;6561:1;6554:15;6580:184;-1:-1:-1;;;6629:1:32;6622:88;6729:4;6726:1;6719:15;6753:4;6750:1;6743:15;6769:177;6854:66;6847:5;6843:78;6836:5;6833:89;6823:2;;6936:1;6933;6926:12",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.6;\r\n\r\nimport \"../tokens/nf-token-metadata.sol\";\r\nimport \"../tokens/nf-token-enumerable.sol\";\r\nimport \"../ownership/ownable.sol\";\r\n\r\n/**\r\n * @dev This is an example contract implementation of NFToken with enumerable and metadata\r\n * extensions.\r\n */\r\ncontract NFTokenMetadataEnumerableMock is\r\n  NFTokenEnumerable,\r\n  NFTokenMetadata,\r\n  Ownable\r\n{\r\n\r\n  /**\r\n   * @dev Contract constructor.\r\n   * @param _name A descriptive name for a collection of NFTs.\r\n   * @param _symbol An abbreviated name for NFTokens.\r\n   */\r\n  constructor(\r\n    string memory _name,\r\n    string memory _symbol\r\n  )\r\n  {\r\n    nftName = _name;\r\n    nftSymbol = _symbol;\r\n  }\r\n\r\n  /**\r\n   * @dev Mints a new NFT.\r\n   * @param _to The address that will own the minted NFT.\r\n   * @param _tokenId of the NFT to be minted by the msg.sender.\r\n   * @param _uri String representing RFC 3986 URI.\r\n   */\r\n  function mint(\r\n    address _to,\r\n    uint256 _tokenId,\r\n    string calldata _uri\r\n  )\r\n    external\r\n    onlyOwner\r\n  {\r\n    super._mint(_to, _tokenId);\r\n    super._setTokenUri(_tokenId, _uri);\r\n  }\r\n\r\n  /**\r\n   * @dev Removes a NFT from owner.\r\n   * @param _tokenId Which NFT we want to remove.\r\n   */\r\n  function burn(\r\n    uint256 _tokenId\r\n  )\r\n    external\r\n    onlyOwner\r\n  {\r\n    super._burn(_tokenId);\r\n  }\r\n\r\n  /**\r\n   * @dev Mints a new NFT.\r\n   * @notice This is an internal function which should be called from user-implemented external\r\n   * mint function. Its purpose is to show and properly initialize data structures when using this\r\n   * implementation.\r\n   * @param _to The address that will own the minted NFT.\r\n   * @param _tokenId of the NFT to be minted by the msg.sender.\r\n   */\r\n  function _mint(\r\n    address _to,\r\n    uint256 _tokenId\r\n  )\r\n    internal\r\n    override(NFToken, NFTokenEnumerable)\r\n    virtual\r\n  {\r\n    NFTokenEnumerable._mint(_to, _tokenId);\r\n  }\r\n\r\n  /**\r\n   * @dev Burns a NFT.\r\n   * @notice This is an internal function which should be called from user-implemented external\r\n   * burn function. Its purpose is to show and properly initialize data structures when using this\r\n   * implementation. Also, note that this burn implementation allows the minter to re-mint a burned\r\n   * NFT.\r\n   * @param _tokenId ID of the NFT to be burned.\r\n   */\r\n  function _burn(\r\n    uint256 _tokenId\r\n  )\r\n    internal\r\n    override(NFTokenMetadata, NFTokenEnumerable)\r\n    virtual\r\n  {\r\n    NFTokenEnumerable._burn(_tokenId);\r\n    if (bytes(idToUri[_tokenId]).length != 0)\r\n    {\r\n      delete idToUri[_tokenId];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @notice Use and override this function with caution. Wrong usage can have serious consequences.\r\n   * @dev Removes a NFT from an address.\r\n   * @param _from Address from wich we want to remove the NFT.\r\n   * @param _tokenId Which NFT we want to remove.\r\n   */\r\n  function _removeNFToken(\r\n    address _from,\r\n    uint256 _tokenId\r\n  )\r\n    internal\r\n    override(NFToken, NFTokenEnumerable)\r\n  {\r\n    NFTokenEnumerable._removeNFToken(_from, _tokenId);\r\n  }\r\n\r\n  /**\r\n   * @notice Use and override this function with caution. Wrong usage can have serious consequences.\r\n   * @dev Assigns a new NFT to an address.\r\n   * @param _to Address to wich we want to add the NFT.\r\n   * @param _tokenId Which NFT we want to add.\r\n   */\r\n  function _addNFToken(\r\n    address _to,\r\n    uint256 _tokenId\r\n  )\r\n    internal\r\n    override(NFToken, NFTokenEnumerable)\r\n  {\r\n    NFTokenEnumerable._addNFToken(_to, _tokenId);\r\n  }\r\n\r\n   /**\r\n   * @dev Helper function that gets NFT count of owner. This is needed for overriding in enumerable\r\n   * extension to remove double storage(gas optimization) of owner nft count.\r\n   * @param _owner Address for whom to query the count.\r\n   * @return Number of _owner NFTs.\r\n   */\r\n  function _getOwnerNFTCount(\r\n    address _owner\r\n  )\r\n    internal\r\n    override(NFToken, NFTokenEnumerable)\r\n    view\r\n    returns (uint256)\r\n  {\r\n    return NFTokenEnumerable._getOwnerNFTCount(_owner);\r\n  }\r\n\r\n}\r\n",
  "sourcePath": "C:\\Users\\jacky\\Desktop\\JRiffAuction\\contracts\\mocks\\nf-token-metadata-enumerable-mock.sol",
  "ast": {
    "absolutePath": "project:/contracts/mocks/nf-token-metadata-enumerable-mock.sol",
    "exportedSymbols": {
      "AddressUtils": [
        4216
      ],
      "ERC165": [
        4228
      ],
      "ERC721": [
        3077
      ],
      "ERC721Enumerable": [
        2922
      ],
      "ERC721Metadata": [
        2946
      ],
      "ERC721TokenReceiver": [
        2964
      ],
      "NFToken": [
        4184
      ],
      "NFTokenEnumerable": [
        3404
      ],
      "NFTokenMetadata": [
        3514
      ],
      "NFTokenMetadataEnumerableMock": [
        2753
      ],
      "Ownable": [
        2894
      ],
      "SupportsInterface": [
        4265
      ]
    },
    "id": 2754,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2577,
        "literals": [
          "solidity",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:18"
      },
      {
        "absolutePath": "project:/contracts/tokens/nf-token-metadata.sol",
        "file": "../tokens/nf-token-metadata.sol",
        "id": 2578,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2754,
        "sourceUnit": 3515,
        "src": "59:41:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/tokens/nf-token-enumerable.sol",
        "file": "../tokens/nf-token-enumerable.sol",
        "id": 2579,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2754,
        "sourceUnit": 3405,
        "src": "102:43:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ownership/ownable.sol",
        "file": "../ownership/ownable.sol",
        "id": 2580,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2754,
        "sourceUnit": 2895,
        "src": "147:34:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2582,
              "name": "NFTokenEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3404,
              "src": "348:17:18"
            },
            "id": 2583,
            "nodeType": "InheritanceSpecifier",
            "src": "348:17:18"
          },
          {
            "baseName": {
              "id": 2584,
              "name": "NFTokenMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3514,
              "src": "370:15:18"
            },
            "id": 2585,
            "nodeType": "InheritanceSpecifier",
            "src": "370:15:18"
          },
          {
            "baseName": {
              "id": 2586,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2894,
              "src": "390:7:18"
            },
            "id": 2587,
            "nodeType": "InheritanceSpecifier",
            "src": "390:7:18"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2581,
          "nodeType": "StructuredDocumentation",
          "src": "185:116:18",
          "text": " @dev This is an example contract implementation of NFToken with enumerable and metadata\n extensions."
        },
        "fullyImplemented": true,
        "id": 2753,
        "linearizedBaseContracts": [
          2753,
          2894,
          3514,
          2946,
          3404,
          2922,
          4184,
          4265,
          4228,
          3077
        ],
        "name": "NFTokenMetadataEnumerableMock",
        "nameLocation": "312:29:18",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2603,
              "nodeType": "Block",
              "src": "646:54:18",
              "statements": [
                {
                  "expression": {
                    "id": 2597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2595,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3416,
                      "src": "653:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2596,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2590,
                      "src": "663:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "653:15:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2598,
                  "nodeType": "ExpressionStatement",
                  "src": "653:15:18"
                },
                {
                  "expression": {
                    "id": 2601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2599,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3419,
                      "src": "675:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2600,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2592,
                      "src": "687:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "675:19:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2602,
                  "nodeType": "ExpressionStatement",
                  "src": "675:19:18"
                }
              ]
            },
            "documentation": {
              "id": 2588,
              "nodeType": "StructuredDocumentation",
              "src": "406:162:18",
              "text": " @dev Contract constructor.\n @param _name A descriptive name for a collection of NFTs.\n @param _symbol An abbreviated name for NFTokens."
            },
            "id": 2604,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2590,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "604:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2604,
                  "src": "590:19:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2589,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "590:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2592,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "630:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2604,
                  "src": "616:21:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2591,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "616:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "583:59:18"
            },
            "returnParameters": {
              "id": 2594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "646:0:18"
            },
            "scope": 2753,
            "src": "572:128:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2630,
              "nodeType": "Block",
              "src": "1043:80:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2619,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2607,
                        "src": "1062:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2620,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2609,
                        "src": "1067:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2616,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1050:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadataEnumerableMock_$2753_$",
                          "typeString": "type(contract super NFTokenMetadataEnumerableMock)"
                        }
                      },
                      "id": 2618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3214,
                      "src": "1050:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1050:26:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2622,
                  "nodeType": "ExpressionStatement",
                  "src": "1050:26:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2626,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2609,
                        "src": "1102:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2627,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2611,
                        "src": "1112:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "id": 2623,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1083:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadataEnumerableMock_$2753_$",
                          "typeString": "type(contract super NFTokenMetadataEnumerableMock)"
                        }
                      },
                      "id": 2625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setTokenUri",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3513,
                      "src": "1083:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 2628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1083:34:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2629,
                  "nodeType": "ExpressionStatement",
                  "src": "1083:34:18"
                }
              ]
            },
            "documentation": {
              "id": 2605,
              "nodeType": "StructuredDocumentation",
              "src": "706:214:18",
              "text": " @dev Mints a new NFT.\n @param _to The address that will own the minted NFT.\n @param _tokenId of the NFT to be minted by the msg.sender.\n @param _uri String representing RFC 3986 URI."
            },
            "functionSelector": "d3fc9864",
            "id": 2631,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2614,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2613,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2893,
                  "src": "1030:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "1030:9:18"
              }
            ],
            "name": "mint",
            "nameLocation": "933:4:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2607,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "952:3:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2631,
                  "src": "944:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2606,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "944:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2609,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "970:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2631,
                  "src": "962:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2608,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "962:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2611,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nameLocation": "1001:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2631,
                  "src": "985:20:18",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2610,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "985:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "937:73:18"
            },
            "returnParameters": {
              "id": 2615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1043:0:18"
            },
            "scope": 2753,
            "src": "924:199:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2645,
              "nodeType": "Block",
              "src": "1305:34:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2642,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2634,
                        "src": "1324:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2639,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1312:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadataEnumerableMock_$2753_$",
                          "typeString": "type(contract super NFTokenMetadataEnumerableMock)"
                        }
                      },
                      "id": 2641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3495,
                      "src": "1312:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1312:21:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2644,
                  "nodeType": "ExpressionStatement",
                  "src": "1312:21:18"
                }
              ]
            },
            "documentation": {
              "id": 2632,
              "nodeType": "StructuredDocumentation",
              "src": "1129:98:18",
              "text": " @dev Removes a NFT from owner.\n @param _tokenId Which NFT we want to remove."
            },
            "functionSelector": "42966c68",
            "id": 2646,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2637,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2636,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2893,
                  "src": "1292:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "1292:9:18"
              }
            ],
            "name": "burn",
            "nameLocation": "1240:4:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2635,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2634,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1259:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2646,
                  "src": "1251:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2633,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1251:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1244:28:18"
            },
            "returnParameters": {
              "id": 2638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1305:0:18"
            },
            "scope": 2753,
            "src": "1231:108:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3214,
              3990
            ],
            "body": {
              "id": 2664,
              "nodeType": "Block",
              "src": "1863:51:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2660,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2649,
                        "src": "1894:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2661,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2651,
                        "src": "1899:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2657,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3404,
                        "src": "1870:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$3404_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 2659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3214,
                      "src": "1870:23:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1870:38:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2663,
                  "nodeType": "ExpressionStatement",
                  "src": "1870:38:18"
                }
              ]
            },
            "documentation": {
              "id": 2647,
              "nodeType": "StructuredDocumentation",
              "src": "1345:381:18",
              "text": " @dev Mints a new NFT.\n @notice This is an internal function which should be called from user-implemented external\n mint function. Its purpose is to show and properly initialize data structures when using this\n implementation.\n @param _to The address that will own the minted NFT.\n @param _tokenId of the NFT to be minted by the msg.sender."
            },
            "id": 2665,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "1739:5:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2655,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2653,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4184,
                  "src": "1819:7:18"
                },
                {
                  "id": 2654,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3404,
                  "src": "1828:17:18"
                }
              ],
              "src": "1810:36:18"
            },
            "parameters": {
              "id": 2652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2649,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1759:3:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2665,
                  "src": "1751:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2648,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1751:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2651,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1777:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2665,
                  "src": "1769:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2650,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1769:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1744:46:18"
            },
            "returnParameters": {
              "id": 2656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1863:0:18"
            },
            "scope": 2753,
            "src": "1730:184:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3270,
              3495
            ],
            "body": {
              "id": 2696,
              "nodeType": "Block",
              "src": "2440:140:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2677,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2668,
                        "src": "2471:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2674,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3404,
                        "src": "2447:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$3404_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 2676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3270,
                      "src": "2447:23:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2447:33:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2679,
                  "nodeType": "ExpressionStatement",
                  "src": "2447:33:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 2682,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3424,
                              "src": "2497:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 2684,
                            "indexExpression": {
                              "id": 2683,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2668,
                              "src": "2505:8:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2497:17:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 2681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2491:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 2680,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "2491:5:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2491:24:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "id": 2686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2491:31:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2526:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2491:36:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2695,
                  "nodeType": "IfStatement",
                  "src": "2487:88:18",
                  "trueBody": {
                    "id": 2694,
                    "nodeType": "Block",
                    "src": "2534:41:18",
                    "statements": [
                      {
                        "expression": {
                          "id": 2692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "2543:24:18",
                          "subExpression": {
                            "baseExpression": {
                              "id": 2689,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3424,
                              "src": "2550:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 2691,
                            "indexExpression": {
                              "id": 2690,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2668,
                              "src": "2558:8:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2550:17:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2693,
                        "nodeType": "ExpressionStatement",
                        "src": "2543:24:18"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2666,
              "nodeType": "StructuredDocumentation",
              "src": "1920:393:18",
              "text": " @dev Burns a NFT.\n @notice This is an internal function which should be called from user-implemented external\n burn function. Its purpose is to show and properly initialize data structures when using this\n implementation. Also, note that this burn implementation allows the minter to re-mint a burned\n NFT.\n @param _tokenId ID of the NFT to be burned."
            },
            "id": 2697,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "2326:5:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2672,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2670,
                  "name": "NFTokenMetadata",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3514,
                  "src": "2388:15:18"
                },
                {
                  "id": 2671,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3404,
                  "src": "2405:17:18"
                }
              ],
              "src": "2379:44:18"
            },
            "parameters": {
              "id": 2669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2668,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2346:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2697,
                  "src": "2338:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2667,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2338:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2331:28:18"
            },
            "returnParameters": {
              "id": 2673,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2440:0:18"
            },
            "scope": 2753,
            "src": "2317:263:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3342,
              4053
            ],
            "body": {
              "id": 2715,
              "nodeType": "Block",
              "src": "2990:62:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2711,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2700,
                        "src": "3030:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2712,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2702,
                        "src": "3037:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2708,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3404,
                        "src": "2997:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$3404_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 2710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_removeNFToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3342,
                      "src": "2997:32:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2997:49:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2714,
                  "nodeType": "ExpressionStatement",
                  "src": "2997:49:18"
                }
              ]
            },
            "documentation": {
              "id": 2698,
              "nodeType": "StructuredDocumentation",
              "src": "2586:269:18",
              "text": " @notice Use and override this function with caution. Wrong usage can have serious consequences.\n @dev Removes a NFT from an address.\n @param _from Address from wich we want to remove the NFT.\n @param _tokenId Which NFT we want to remove."
            },
            "id": 2716,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_removeNFToken",
            "nameLocation": "2868:14:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2706,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2704,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4184,
                  "src": "2959:7:18"
                },
                {
                  "id": 2705,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3404,
                  "src": "2968:17:18"
                }
              ],
              "src": "2950:36:18"
            },
            "parameters": {
              "id": 2703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2700,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "2897:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2716,
                  "src": "2889:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2699,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2889:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2702,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2917:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2716,
                  "src": "2909:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2701,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2909:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2882:48:18"
            },
            "returnParameters": {
              "id": 2707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2990:0:18"
            },
            "scope": 2753,
            "src": "2859:193:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3388,
              4086
            ],
            "body": {
              "id": 2734,
              "nodeType": "Block",
              "src": "3449:57:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2730,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2719,
                        "src": "3486:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2731,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2721,
                        "src": "3491:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2727,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3404,
                        "src": "3456:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$3404_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 2729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addNFToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3388,
                      "src": "3456:29:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3456:44:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2733,
                  "nodeType": "ExpressionStatement",
                  "src": "3456:44:18"
                }
              ]
            },
            "documentation": {
              "id": 2717,
              "nodeType": "StructuredDocumentation",
              "src": "3058:261:18",
              "text": " @notice Use and override this function with caution. Wrong usage can have serious consequences.\n @dev Assigns a new NFT to an address.\n @param _to Address to wich we want to add the NFT.\n @param _tokenId Which NFT we want to add."
            },
            "id": 2735,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addNFToken",
            "nameLocation": "3332:11:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2725,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2723,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4184,
                  "src": "3418:7:18"
                },
                {
                  "id": 2724,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3404,
                  "src": "3427:17:18"
                }
              ],
              "src": "3409:36:18"
            },
            "parameters": {
              "id": 2722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2719,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3358:3:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2735,
                  "src": "3350:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2718,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3350:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2721,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3376:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2735,
                  "src": "3368:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2720,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3368:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3343:46:18"
            },
            "returnParameters": {
              "id": 2726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3449:0:18"
            },
            "scope": 2753,
            "src": "3323:183:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3403,
              4099
            ],
            "body": {
              "id": 2751,
              "nodeType": "Block",
              "src": "3947:63:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2748,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2738,
                        "src": "3997:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2746,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3404,
                        "src": "3961:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$3404_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 2747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_getOwnerNFTCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3403,
                      "src": "3961:35:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 2749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3961:43:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2745,
                  "id": 2750,
                  "nodeType": "Return",
                  "src": "3954:50:18"
                }
              ]
            },
            "documentation": {
              "id": 2736,
              "nodeType": "StructuredDocumentation",
              "src": "3513:285:18",
              "text": " @dev Helper function that gets NFT count of owner. This is needed for overriding in enumerable\n extension to remove double storage(gas optimization) of owner nft count.\n @param _owner Address for whom to query the count.\n @return Number of _owner NFTs."
            },
            "id": 2752,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getOwnerNFTCount",
            "nameLocation": "3811:17:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2742,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2740,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4184,
                  "src": "3883:7:18"
                },
                {
                  "id": 2741,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3404,
                  "src": "3892:17:18"
                }
              ],
              "src": "3874:36:18"
            },
            "parameters": {
              "id": 2739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2738,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "3843:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2752,
                  "src": "3835:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2737,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3835:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3828:26:18"
            },
            "returnParameters": {
              "id": 2745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2744,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2752,
                  "src": "3935:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2743,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3935:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3934:9:18"
            },
            "scope": 2753,
            "src": "3802:208:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2754,
        "src": "303:3712:18",
        "usedErrors": []
      }
    ],
    "src": "33:3984:18"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/mocks/nf-token-metadata-enumerable-mock.sol",
    "exportedSymbols": {
      "AddressUtils": [
        4216
      ],
      "ERC165": [
        4228
      ],
      "ERC721": [
        3077
      ],
      "ERC721Enumerable": [
        2922
      ],
      "ERC721Metadata": [
        2946
      ],
      "ERC721TokenReceiver": [
        2964
      ],
      "NFToken": [
        4184
      ],
      "NFTokenEnumerable": [
        3404
      ],
      "NFTokenMetadata": [
        3514
      ],
      "NFTokenMetadataEnumerableMock": [
        2753
      ],
      "Ownable": [
        2894
      ],
      "SupportsInterface": [
        4265
      ]
    },
    "id": 2754,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2577,
        "literals": [
          "solidity",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:18"
      },
      {
        "absolutePath": "project:/contracts/tokens/nf-token-metadata.sol",
        "file": "../tokens/nf-token-metadata.sol",
        "id": 2578,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2754,
        "sourceUnit": 3515,
        "src": "59:41:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/tokens/nf-token-enumerable.sol",
        "file": "../tokens/nf-token-enumerable.sol",
        "id": 2579,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2754,
        "sourceUnit": 3405,
        "src": "102:43:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ownership/ownable.sol",
        "file": "../ownership/ownable.sol",
        "id": 2580,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2754,
        "sourceUnit": 2895,
        "src": "147:34:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2582,
              "name": "NFTokenEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3404,
              "src": "348:17:18"
            },
            "id": 2583,
            "nodeType": "InheritanceSpecifier",
            "src": "348:17:18"
          },
          {
            "baseName": {
              "id": 2584,
              "name": "NFTokenMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3514,
              "src": "370:15:18"
            },
            "id": 2585,
            "nodeType": "InheritanceSpecifier",
            "src": "370:15:18"
          },
          {
            "baseName": {
              "id": 2586,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2894,
              "src": "390:7:18"
            },
            "id": 2587,
            "nodeType": "InheritanceSpecifier",
            "src": "390:7:18"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2581,
          "nodeType": "StructuredDocumentation",
          "src": "185:116:18",
          "text": " @dev This is an example contract implementation of NFToken with enumerable and metadata\n extensions."
        },
        "fullyImplemented": true,
        "id": 2753,
        "linearizedBaseContracts": [
          2753,
          2894,
          3514,
          2946,
          3404,
          2922,
          4184,
          4265,
          4228,
          3077
        ],
        "name": "NFTokenMetadataEnumerableMock",
        "nameLocation": "312:29:18",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2603,
              "nodeType": "Block",
              "src": "646:54:18",
              "statements": [
                {
                  "expression": {
                    "id": 2597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2595,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3416,
                      "src": "653:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2596,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2590,
                      "src": "663:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "653:15:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2598,
                  "nodeType": "ExpressionStatement",
                  "src": "653:15:18"
                },
                {
                  "expression": {
                    "id": 2601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2599,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3419,
                      "src": "675:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2600,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2592,
                      "src": "687:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "675:19:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2602,
                  "nodeType": "ExpressionStatement",
                  "src": "675:19:18"
                }
              ]
            },
            "documentation": {
              "id": 2588,
              "nodeType": "StructuredDocumentation",
              "src": "406:162:18",
              "text": " @dev Contract constructor.\n @param _name A descriptive name for a collection of NFTs.\n @param _symbol An abbreviated name for NFTokens."
            },
            "id": 2604,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2590,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "604:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2604,
                  "src": "590:19:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2589,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "590:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2592,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "630:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2604,
                  "src": "616:21:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2591,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "616:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "583:59:18"
            },
            "returnParameters": {
              "id": 2594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "646:0:18"
            },
            "scope": 2753,
            "src": "572:128:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2630,
              "nodeType": "Block",
              "src": "1043:80:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2619,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2607,
                        "src": "1062:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2620,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2609,
                        "src": "1067:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2616,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1050:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadataEnumerableMock_$2753_$",
                          "typeString": "type(contract super NFTokenMetadataEnumerableMock)"
                        }
                      },
                      "id": 2618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3214,
                      "src": "1050:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1050:26:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2622,
                  "nodeType": "ExpressionStatement",
                  "src": "1050:26:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2626,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2609,
                        "src": "1102:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2627,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2611,
                        "src": "1112:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "id": 2623,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1083:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadataEnumerableMock_$2753_$",
                          "typeString": "type(contract super NFTokenMetadataEnumerableMock)"
                        }
                      },
                      "id": 2625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setTokenUri",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3513,
                      "src": "1083:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 2628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1083:34:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2629,
                  "nodeType": "ExpressionStatement",
                  "src": "1083:34:18"
                }
              ]
            },
            "documentation": {
              "id": 2605,
              "nodeType": "StructuredDocumentation",
              "src": "706:214:18",
              "text": " @dev Mints a new NFT.\n @param _to The address that will own the minted NFT.\n @param _tokenId of the NFT to be minted by the msg.sender.\n @param _uri String representing RFC 3986 URI."
            },
            "functionSelector": "d3fc9864",
            "id": 2631,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2614,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2613,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2893,
                  "src": "1030:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "1030:9:18"
              }
            ],
            "name": "mint",
            "nameLocation": "933:4:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2607,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "952:3:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2631,
                  "src": "944:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2606,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "944:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2609,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "970:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2631,
                  "src": "962:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2608,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "962:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2611,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nameLocation": "1001:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2631,
                  "src": "985:20:18",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2610,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "985:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "937:73:18"
            },
            "returnParameters": {
              "id": 2615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1043:0:18"
            },
            "scope": 2753,
            "src": "924:199:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2645,
              "nodeType": "Block",
              "src": "1305:34:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2642,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2634,
                        "src": "1324:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2639,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1312:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadataEnumerableMock_$2753_$",
                          "typeString": "type(contract super NFTokenMetadataEnumerableMock)"
                        }
                      },
                      "id": 2641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3495,
                      "src": "1312:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1312:21:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2644,
                  "nodeType": "ExpressionStatement",
                  "src": "1312:21:18"
                }
              ]
            },
            "documentation": {
              "id": 2632,
              "nodeType": "StructuredDocumentation",
              "src": "1129:98:18",
              "text": " @dev Removes a NFT from owner.\n @param _tokenId Which NFT we want to remove."
            },
            "functionSelector": "42966c68",
            "id": 2646,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2637,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2636,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2893,
                  "src": "1292:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "1292:9:18"
              }
            ],
            "name": "burn",
            "nameLocation": "1240:4:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2635,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2634,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1259:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2646,
                  "src": "1251:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2633,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1251:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1244:28:18"
            },
            "returnParameters": {
              "id": 2638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1305:0:18"
            },
            "scope": 2753,
            "src": "1231:108:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3214,
              3990
            ],
            "body": {
              "id": 2664,
              "nodeType": "Block",
              "src": "1863:51:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2660,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2649,
                        "src": "1894:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2661,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2651,
                        "src": "1899:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2657,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3404,
                        "src": "1870:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$3404_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 2659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3214,
                      "src": "1870:23:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1870:38:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2663,
                  "nodeType": "ExpressionStatement",
                  "src": "1870:38:18"
                }
              ]
            },
            "documentation": {
              "id": 2647,
              "nodeType": "StructuredDocumentation",
              "src": "1345:381:18",
              "text": " @dev Mints a new NFT.\n @notice This is an internal function which should be called from user-implemented external\n mint function. Its purpose is to show and properly initialize data structures when using this\n implementation.\n @param _to The address that will own the minted NFT.\n @param _tokenId of the NFT to be minted by the msg.sender."
            },
            "id": 2665,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "1739:5:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2655,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2653,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4184,
                  "src": "1819:7:18"
                },
                {
                  "id": 2654,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3404,
                  "src": "1828:17:18"
                }
              ],
              "src": "1810:36:18"
            },
            "parameters": {
              "id": 2652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2649,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1759:3:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2665,
                  "src": "1751:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2648,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1751:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2651,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1777:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2665,
                  "src": "1769:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2650,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1769:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1744:46:18"
            },
            "returnParameters": {
              "id": 2656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1863:0:18"
            },
            "scope": 2753,
            "src": "1730:184:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3270,
              3495
            ],
            "body": {
              "id": 2696,
              "nodeType": "Block",
              "src": "2440:140:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2677,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2668,
                        "src": "2471:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2674,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3404,
                        "src": "2447:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$3404_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 2676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3270,
                      "src": "2447:23:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2447:33:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2679,
                  "nodeType": "ExpressionStatement",
                  "src": "2447:33:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 2682,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3424,
                              "src": "2497:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 2684,
                            "indexExpression": {
                              "id": 2683,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2668,
                              "src": "2505:8:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2497:17:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 2681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2491:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 2680,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "2491:5:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2491:24:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "id": 2686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2491:31:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2526:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2491:36:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2695,
                  "nodeType": "IfStatement",
                  "src": "2487:88:18",
                  "trueBody": {
                    "id": 2694,
                    "nodeType": "Block",
                    "src": "2534:41:18",
                    "statements": [
                      {
                        "expression": {
                          "id": 2692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "2543:24:18",
                          "subExpression": {
                            "baseExpression": {
                              "id": 2689,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3424,
                              "src": "2550:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 2691,
                            "indexExpression": {
                              "id": 2690,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2668,
                              "src": "2558:8:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2550:17:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2693,
                        "nodeType": "ExpressionStatement",
                        "src": "2543:24:18"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2666,
              "nodeType": "StructuredDocumentation",
              "src": "1920:393:18",
              "text": " @dev Burns a NFT.\n @notice This is an internal function which should be called from user-implemented external\n burn function. Its purpose is to show and properly initialize data structures when using this\n implementation. Also, note that this burn implementation allows the minter to re-mint a burned\n NFT.\n @param _tokenId ID of the NFT to be burned."
            },
            "id": 2697,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "2326:5:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2672,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2670,
                  "name": "NFTokenMetadata",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3514,
                  "src": "2388:15:18"
                },
                {
                  "id": 2671,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3404,
                  "src": "2405:17:18"
                }
              ],
              "src": "2379:44:18"
            },
            "parameters": {
              "id": 2669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2668,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2346:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2697,
                  "src": "2338:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2667,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2338:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2331:28:18"
            },
            "returnParameters": {
              "id": 2673,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2440:0:18"
            },
            "scope": 2753,
            "src": "2317:263:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3342,
              4053
            ],
            "body": {
              "id": 2715,
              "nodeType": "Block",
              "src": "2990:62:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2711,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2700,
                        "src": "3030:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2712,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2702,
                        "src": "3037:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2708,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3404,
                        "src": "2997:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$3404_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 2710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_removeNFToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3342,
                      "src": "2997:32:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2997:49:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2714,
                  "nodeType": "ExpressionStatement",
                  "src": "2997:49:18"
                }
              ]
            },
            "documentation": {
              "id": 2698,
              "nodeType": "StructuredDocumentation",
              "src": "2586:269:18",
              "text": " @notice Use and override this function with caution. Wrong usage can have serious consequences.\n @dev Removes a NFT from an address.\n @param _from Address from wich we want to remove the NFT.\n @param _tokenId Which NFT we want to remove."
            },
            "id": 2716,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_removeNFToken",
            "nameLocation": "2868:14:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2706,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2704,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4184,
                  "src": "2959:7:18"
                },
                {
                  "id": 2705,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3404,
                  "src": "2968:17:18"
                }
              ],
              "src": "2950:36:18"
            },
            "parameters": {
              "id": 2703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2700,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "2897:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2716,
                  "src": "2889:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2699,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2889:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2702,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2917:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2716,
                  "src": "2909:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2701,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2909:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2882:48:18"
            },
            "returnParameters": {
              "id": 2707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2990:0:18"
            },
            "scope": 2753,
            "src": "2859:193:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3388,
              4086
            ],
            "body": {
              "id": 2734,
              "nodeType": "Block",
              "src": "3449:57:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2730,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2719,
                        "src": "3486:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2731,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2721,
                        "src": "3491:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2727,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3404,
                        "src": "3456:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$3404_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 2729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addNFToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3388,
                      "src": "3456:29:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3456:44:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2733,
                  "nodeType": "ExpressionStatement",
                  "src": "3456:44:18"
                }
              ]
            },
            "documentation": {
              "id": 2717,
              "nodeType": "StructuredDocumentation",
              "src": "3058:261:18",
              "text": " @notice Use and override this function with caution. Wrong usage can have serious consequences.\n @dev Assigns a new NFT to an address.\n @param _to Address to wich we want to add the NFT.\n @param _tokenId Which NFT we want to add."
            },
            "id": 2735,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addNFToken",
            "nameLocation": "3332:11:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2725,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2723,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4184,
                  "src": "3418:7:18"
                },
                {
                  "id": 2724,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3404,
                  "src": "3427:17:18"
                }
              ],
              "src": "3409:36:18"
            },
            "parameters": {
              "id": 2722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2719,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3358:3:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2735,
                  "src": "3350:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2718,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3350:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2721,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3376:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2735,
                  "src": "3368:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2720,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3368:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3343:46:18"
            },
            "returnParameters": {
              "id": 2726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3449:0:18"
            },
            "scope": 2753,
            "src": "3323:183:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3403,
              4099
            ],
            "body": {
              "id": 2751,
              "nodeType": "Block",
              "src": "3947:63:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2748,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2738,
                        "src": "3997:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2746,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3404,
                        "src": "3961:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$3404_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 2747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_getOwnerNFTCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3403,
                      "src": "3961:35:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 2749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3961:43:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2745,
                  "id": 2750,
                  "nodeType": "Return",
                  "src": "3954:50:18"
                }
              ]
            },
            "documentation": {
              "id": 2736,
              "nodeType": "StructuredDocumentation",
              "src": "3513:285:18",
              "text": " @dev Helper function that gets NFT count of owner. This is needed for overriding in enumerable\n extension to remove double storage(gas optimization) of owner nft count.\n @param _owner Address for whom to query the count.\n @return Number of _owner NFTs."
            },
            "id": 2752,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getOwnerNFTCount",
            "nameLocation": "3811:17:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2742,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2740,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4184,
                  "src": "3883:7:18"
                },
                {
                  "id": 2741,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3404,
                  "src": "3892:17:18"
                }
              ],
              "src": "3874:36:18"
            },
            "parameters": {
              "id": 2739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2738,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "3843:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2752,
                  "src": "3835:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2737,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3835:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3828:26:18"
            },
            "returnParameters": {
              "id": 2745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2744,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2752,
                  "src": "3935:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2743,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3935:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3934:9:18"
            },
            "scope": 2753,
            "src": "3802:208:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2754,
        "src": "303:3712:18",
        "usedErrors": []
      }
    ],
    "src": "33:3984:18"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-06T16:30:51.508Z",
  "devdoc": {
    "details": "This is an example contract implementation of NFToken with enumerable and metadata extensions.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Set or reaffirm the approved address for an NFT. This function can be changed to payable.",
        "params": {
          "_approved": "Address to be approved for the given NFT ID.",
          "_tokenId": "ID of the token to be approved."
        }
      },
      "balanceOf(address)": {
        "details": "Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.",
        "params": {
          "_owner": "Address for whom to query the balance."
        },
        "returns": {
          "_0": "Balance of _owner."
        }
      },
      "burn(uint256)": {
        "details": "Removes a NFT from owner.",
        "params": {
          "_tokenId": "Which NFT we want to remove."
        }
      },
      "constructor": {
        "details": "Contract constructor.",
        "params": {
          "_name": "A descriptive name for a collection of NFTs.",
          "_symbol": "An abbreviated name for NFTokens."
        }
      },
      "getApproved(uint256)": {
        "details": "Get the approved address for a single NFT.",
        "params": {
          "_tokenId": "ID of the NFT to query the approval of."
        },
        "returns": {
          "_0": "Address that _tokenId is approved for."
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Checks if `_operator` is an approved operator for `_owner`.",
        "params": {
          "_operator": "The address that acts on behalf of the owner.",
          "_owner": "The address that owns the NFTs."
        },
        "returns": {
          "_0": "True if approved for all, false otherwise."
        }
      },
      "mint(address,uint256,string)": {
        "details": "Mints a new NFT.",
        "params": {
          "_to": "The address that will own the minted NFT.",
          "_tokenId": "of the NFT to be minted by the msg.sender.",
          "_uri": "String representing RFC 3986 URI."
        }
      },
      "name()": {
        "details": "Returns a descriptive name for a collection of NFTokens.",
        "returns": {
          "_name": "Representing name."
        }
      },
      "ownerOf(uint256)": {
        "details": "Returns the address of the owner of the NFT. NFTs assigned to the zero address are considered invalid, and queries about them do throw.",
        "params": {
          "_tokenId": "The identifier for an NFT."
        },
        "returns": {
          "_owner": "Address of _tokenId owner."
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
        "params": {
          "_data": "Additional data with no specified format, sent in call to `_to`.",
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Enables or disables approval for a third party (\"operator\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.",
        "params": {
          "_approved": "True if the operators is approved, false to revoke approval.",
          "_operator": "Address to add to the set of authorized operators."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Function to check which interfaces are suported by this contract.",
        "params": {
          "_interfaceID": "Id of the interface."
        },
        "returns": {
          "_0": "True if _interfaceID is supported, false otherwise."
        }
      },
      "symbol()": {
        "details": "Returns an abbreviated name for NFTokens.",
        "returns": {
          "_symbol": "Representing symbol."
        }
      },
      "tokenByIndex(uint256)": {
        "details": "Returns NFT ID by its index.",
        "params": {
          "_index": "A counter less than `totalSupply()`."
        },
        "returns": {
          "_0": "Token id."
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "returns the n-th NFT ID from a list of owner's tokens.",
        "params": {
          "_index": "Index number representing n-th token in owner's list of tokens.",
          "_owner": "Token owner's address."
        },
        "returns": {
          "_0": "Token id."
        }
      },
      "tokenURI(uint256)": {
        "details": "A distinct URI (RFC 3986) for a given NFT.",
        "params": {
          "_tokenId": "Id for which we want uri."
        },
        "returns": {
          "_0": "URI of _tokenId."
        }
      },
      "totalSupply()": {
        "details": "Returns the count of all existing NFTokens.",
        "returns": {
          "_0": "Total supply of NFTs."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "approve(address,uint256)": {
        "notice": "The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner."
      },
      "getApproved(uint256)": {
        "notice": "Throws if `_tokenId` is not a valid NFT."
      },
      "safeTransferFrom(address,address,uint256)": {
        "notice": "This works identically to the other function with an extra data parameter, except this function just sets data to \"\"."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "notice": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`."
      },
      "setApprovalForAll(address,bool)": {
        "notice": "This works even if sender doesn't own any tokens at the time."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they may be permanently lost."
      }
    },
    "version": 1
  }
}